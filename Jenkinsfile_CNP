#!groovy
@Library("Infrastructure")

String product = "prl"
String component = "ccd-definitions"

def channel = '#prl-tech-notifications'

def yarnBuilder = new uk.gov.hmcts.contino.YarnBuilder(this)

def secrets = [
        's2s-${env}'      : [
                secret('microservicekey-ccd-data', 'DATA_STORE_S2S_KEY'),
                secret('microservicekey-ccd-definition', 'DEFINITION_STORE_S2S_KEY'),
                secret('microservicekey-ccd-gw', 'API_GATEWAY_S2S_KEY'),
                secret('microservicekey-ccd-ps', 'PRINT_S2S_KEY'),
                secret('microservicekey-ccd-admin', 'ADMIN_S2S_KEY')
        ],
        'prl-${env}'      : [
                secret('legalprofessional-testuser-one', 'LEGALPROFESSIONAL_TESTUSER_ONE'),
                secret('legalprofessional-respondent-testuser', 'LEGALPROFESSIONAL_RESPONDENT_TESTUSER'),
                secret('legalprofessional-testpassword-one', 'LEGALPROFESSIONAL_TESTPASSWORD_ONE'),
                secret('courtadmin-testuser-one', 'COURTADMIN_TESTUSER_ONE'),
                secret('courtadmin-swansea-testuser', 'COURTADMIN_SWANSEA_TESTUSER'),
                secret('judge-testuser-one', 'JUDGE_TESTUSER_ONE'),
                secret('judge-testpassword', 'JUDGE_TESTPASSWORD'),
                secret('casemanager-testuser', 'CASEMANAGER_TESTUSER')
        ],
        'ccd-${env}'      : [
                secret('postcode-info-address-lookup-token', 'ADDRESS_LOOKUP_TOKEN'),
                secret('ccd-api-gateway-oauth2-client-secret', 'API_GATEWAY_IDAM_SECRET'),
                secret('ccd-admin-web-oauth2-client-secret', 'ADMIN_WEB_IDAM_SECRET'),
                secret('idam-data-store-client-secret','IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET'),
                secret('idam-data-store-system-user-username','IDAM_DATA_STORE_SYSTEM_USER_USERNAME'),
                secret('idam-data-store-system-user-password','IDAM_DATA_STORE_SYSTEM_USER_PASSWORD'),
                secret('ccd-case-document-am-api-s2s-secret', 'CCD_CASE_DOCUMENT_AM_API_SECRET')
        ],
        'aac-${env}': [
                secret('aac-manage-case-s2s-secret', 'MANAGE_CASE_S2S_KEY'),
                secret('idam-noc-approver-username', 'IDAM_NOC_APPROVER_USERNAME'),
                secret('idam-noc-approver-password', 'IDAM_NOC_APPROVER_PASSWORD'),
                secret('notify-mca-api-key-secret', 'NOTIFY_MCA_API_KEY'),
                secret('idam-mca-client-secret', 'IDAM_MCA_CLIENT_SECRET'),
                secret('idam-mca-system-user-username', 'IDAM_CAA_USERNAME'),
                secret('idam-mca-system-user-password', 'IDAM_CAA_PASSWORD')
        ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

withPipeline("nodejs", product, component) {
  loadVaultSecrets(secrets)
  enableHighLevelDataSetup()
  enableSlackNotifications(channel)

  onPR{
    env.ENVIRONMENT="preview"
  }
  onMaster{
    env.ENVIRONMENT="aat"
  }

  afterAlways('test') {}

  before('highleveldatasetup:preview') {
    yarnBuilder.yarn('setup')
    stageWithAgent('Generate Family Private Law Case config - preview', product) {
      yarnBuilder.yarn('generate-excel-preview')
    }
    env.CCD_ADMIN_URL="https://admin-web-prl-ccd-definitions-pr-${CHANGE_ID}.preview.platform.hmcts.net"
    env.XUI_WEB_URL="https://xui-prl-ccd-definitions-pr-${CHANGE_ID}.preview.platform.hmcts.net"
    env.CCD_FILE_NAME="ccd-config-PRL-preview.xlsx"
  }

  before('highleveldatasetup:aat') {
    yarnBuilder.yarn('setup')

    stageWithAgent('Generate Family Private Law Case config - all', product) {
      yarnBuilder.yarn('generate-excel-all')
    }
  }

  before('smoketest:preview') {
    yarnBuilder.yarn('reset-ccd-submodule')
    yarnBuilder.yarn('generate-excel-all')
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'definitions/**/xlsx/*.xlsx'
    env.CCD_ADMIN_URL="https://admin-web-prl-ccd-definitions-pr-${CHANGE_ID}.preview.platform.hmcts.net"
    env.XUI_WEB_URL="https://xui-prl-ccd-definitions-pr-${CHANGE_ID}.preview.platform.hmcts.net"
    env.CCD_FILE_NAME="ccd-config-PRL-preview.xlsx"
    yarnBuilder.yarn('test:uploadFile')
  }

  afterAlways('smoketest:preview') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'smoke-output/**'
  }

  before('functionaltest:preview') {
    env.ENVIRONMENT="preview"
    env.XUI_WEB_URL="https://xui-prl-ccd-definitions-pr-${CHANGE_ID}.preview.platform.hmcts.net"
    echo "Environment variable set is {env.ENVIRONMENT}"
  }

  before('smoketest:aat') {
    yarnBuilder.yarn('setup')
    yarnBuilder.yarn('generate-excel-all')
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'definitions/**/xlsx/*.xlsx'
    env.CCD_ADMIN_URL="https://ccd-admin-web.aat.platform.hmcts.net"
    env.XUI_WEB_URL="https://manage-case.aat.platform.hmcts.net"
    env.XUI_ORG_WEB_URL="https://manage-org.aat.platform.hmcts.net"
    env.CCD_FILE_NAME="ccd-config-PRL-aat.xlsx"

    yarnBuilder.yarn('test:uploadFile')
  }

  before('functionaltest:aat') {
    env.ENVIRONMENT="aat"
    env.XUI_WEB_URL="https://manage-case.aat.platform.hmcts.net"
  }

  afterAlways('smoketest:aat') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'smoke-output/**'
  }

  afterAlways('functionalTest:preview') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'test/functional/output/mochawesome.html'
  }

  afterAlways('functionalTest:aat') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'test/functional/output/mochawesome.html'
  }
}