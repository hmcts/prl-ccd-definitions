---
# Source: prl-ccd-definitions/charts/aac-manage-case-assignment/charts/java/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name:  ${service_name}-aac-manage-case-assignment-pdb  
  labels:
    app.kubernetes.io/name: ${service_name}-aac-manage-case-assignment
    helm.sh/chart: java-5.2.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
spec:
  maxUnavailable: 50%
  selector:
    matchLabels:
      app.kubernetes.io/name: ${service_name}-aac-manage-case-assignment
---
# Source: prl-ccd-definitions/charts/ccd-case-document-am-api/charts/java/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name:  ${service_name}-cdam-pdb  
  labels:
    app.kubernetes.io/name: ${service_name}-cdam
    helm.sh/chart: java-5.2.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
spec:
  maxUnavailable: 50%
  selector:
    matchLabels:
      app.kubernetes.io/name: ${service_name}-cdam
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-admin-web/charts/nodejs/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name:  test-release-ccd-admin-web-pdb  
  labels:
    app.kubernetes.io/name: test-release-ccd-admin-web
    helm.sh/chart: nodejs-2.4.14
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd
spec:
  maxUnavailable: 50%
  selector:
    matchLabels:
      app.kubernetes.io/name: test-release-ccd-admin-web
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-api-gateway-web/charts/nodejs/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name:  test-release-ccd-api-gw-pdb  
  labels:
    app.kubernetes.io/name: test-release-ccd-api-gw
    helm.sh/chart: nodejs-2.4.14
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd
spec:
  maxUnavailable: 50%
  selector:
    matchLabels:
      app.kubernetes.io/name: test-release-ccd-api-gw
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-data-store-api/charts/java/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name:  test-release-ccd-data-store-api-pdb  
  labels:
    app.kubernetes.io/name: test-release-ccd-data-store-api
    helm.sh/chart: java-4.0.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd
spec:
  maxUnavailable: 50%
  selector:
    matchLabels:
      app.kubernetes.io/name: test-release-ccd-data-store-api
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-definition-store-api/charts/java/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name:  test-release-ccd-definition-store-pdb  
  labels:
    app.kubernetes.io/name: test-release-ccd-definition-store
    helm.sh/chart: java-4.0.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd
spec:
  maxUnavailable: 50%
  selector:
    matchLabels:
      app.kubernetes.io/name: test-release-ccd-definition-store
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-user-profile-api/charts/java/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name:  test-release-ccd-user-profile-api-pdb  
  labels:
    app.kubernetes.io/name: test-release-ccd-user-profile-api
    helm.sh/chart: java-4.0.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd
spec:
  maxUnavailable: 50%
  selector:
    matchLabels:
      app.kubernetes.io/name: test-release-ccd-user-profile-api
---
# Source: prl-ccd-definitions/charts/ccd/charts/elasticsearch/templates/poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: "${SERVICE_NAME}-es-master-pdb"
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: "${SERVICE_NAME}-es-master"
---
# Source: prl-ccd-definitions/charts/ccd/charts/logstash/templates/poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: "test-release-logstash-pdb"
  labels:
    app: "test-release-logstash"
    chart: "logstash"
    heritage: "Helm"
    release: "test-release"
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: "test-release-logstash"
---
# Source: prl-ccd-definitions/charts/prl-cos/charts/java/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name:  test-release-java-pdb  
  labels:
    app.kubernetes.io/name: test-release-java
    helm.sh/chart: java-5.2.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
spec:
  maxUnavailable: 50%
  selector:
    matchLabels:
      app.kubernetes.io/name: test-release-java
---
# Source: prl-ccd-definitions/charts/xui-webapp/charts/nodejs/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name:  ${service_name}-xui-webapp-pdb  
  labels:
    app.kubernetes.io/name: ${service_name}-xui-webapp
    helm.sh/chart: nodejs-3.1.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
spec:
  maxUnavailable: 50%
  selector:
    matchLabels:
      app.kubernetes.io/name: ${service_name}-xui-webapp
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-admin-web/charts/nodejs/templates/sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-release-ccd-admin-web  
  labels:
    app.kubernetes.io/name: test-release-ccd-admin-web
    helm.sh/chart: nodejs-2.4.14
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-api-gateway-web/charts/nodejs/templates/sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-release-ccd-api-gw  
  labels:
    app.kubernetes.io/name: test-release-ccd-api-gw
    helm.sh/chart: nodejs-2.4.14
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-data-store-api/charts/java/templates/sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-release-ccd-data-store-api  
  labels:
    app.kubernetes.io/name: test-release-ccd-data-store-api
    helm.sh/chart: java-4.0.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-definition-store-api/charts/java/templates/sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-release-ccd-definition-store  
  labels:
    app.kubernetes.io/name: test-release-ccd-definition-store
    helm.sh/chart: java-4.0.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-user-profile-api/charts/java/templates/sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-release-ccd-user-profile-api  
  labels:
    app.kubernetes.io/name: test-release-ccd-user-profile-api
    helm.sh/chart: java-4.0.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd
---
# Source: prl-ccd-definitions/charts/ccd/charts/postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: test-release-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-11.6.10
    app.kubernetes.io/instance: test-release
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  postgres-password: "bzQ1cTVCdWQwMA=="
  password: "aG1jdHM="
  # We don't auto-generate LDAP password when it's not provided as we do for other passwords
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-admin-web/charts/idam-pr/templates/bin-configmap-add.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-release-ccd-admin-web-idam-pr-bin-add
  labels:
    type: configuration
    app.kubernetes.io/name: test-release-ccd-admin-web-idam-pr-bin-add
    helm.sh/chart: "idam-pr-2.2.6"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "test-release"
data:
  idam-pr-add: |
    #!/usr/bin/env sh
    set -ex
    
    for redirect_uri in https://admin-web-${SERVICE_FQDN}/oauth2redirect
    do
    echo "Registering new redirect URI for service CCD Admin: ${redirect_uri} using https://idam-api.aat.platform.hmcts.net"
    
    curl -v -k -X PATCH \
      https://idam-api.aat.platform.hmcts.net/testing-support/services/CCD%20Admin \
      -H 'Accept: application/json' \
      -H 'Content-Type: application/json' \
      -d '[ {
    	"operation": "add",
    	"field": "redirect_uri",
    	"value": "'${redirect_uri}'"
    }
    ]'
    done
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-admin-web/charts/idam-pr/templates/bin-configmap-test.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-release-ccd-admin-web-idam-pr-bin-test
  labels:
    type: configuration
    app.kubernetes.io/name: test-release-ccd-admin-web-idam-pr-bin-test
    helm.sh/chart: "idam-pr-2.2.6"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "test-release"
data:
  idam-pr-test: |
    #!/usr/bin/env sh
    
    set -x
    
    testUsername="$(mktemp -u 'james_bond.XXXXXX')$(date +%s)@hmcts.net"
    testPassword="Agent007"
    
    echo "================================================================"
    echo "Creating a new test user $testUsername"
    echo "================================================================"
    userCreationResponse=$(curl -s -k -i -X POST https://idam-api.aat.platform.hmcts.net/testing-support/accounts \
      -H 'Content-Type: application/json' \
      -d '{"email": "'$testUsername'", "forename": "James", "surname": "Bond", "password": "'$testPassword'", "roles": [{"code": "citizen"}]}' 2<&1)
    echo "HTTP response was:"
    echo "================================================================"
    echo "$userCreationResponse"
    echo "================================================================"
    
    echo "================================================================"
    echo "Testing each redirect_uri"
    echo "================================================================"
    
    for redirect_uri in https://admin-web-${SERVICE_FQDN}/oauth2redirect
    do
    echo "================================================================"
    echo "Getting the csrf token: CCD Admin / ${redirect_uri}"
    echo "================================================================"
    getLoginPage=$(curl -s -k -v -c cookies.txt -b cookies.txt 'https://idam-web-public.aat.platform.hmcts.net/login?redirect_uri=${redirect_uri}&client_id=CCD Admin' 2<&1)
    csrf=$(cat cookies.txt | grep -oE 'TOKEN.*' | grep -oE '[^TOKEN\t]+' | tr -d '[:space:]' 2<&1)
    echo "================================================================"
    echo "found token $csrf: CCD Admin / ${redirect_uri}"
    echo "================================================================"
    response=$(curl -s -k -i -c cookies.txt -b cookies.txt -d "_csrf=$csrf&client_id=CCD Admin&username=$testUsername&password=$testPassword&redirect_uri=${redirect_uri}&state=12345&selfRegistrationEnabled=true" 'https://idam-web-public.aat.platform.hmcts.net/login' 2<&1)
    httpCode=$(echo $response | grep -Eo 302)
    
    if [ "$httpCode"  == "302" ]; then
      echo "================================================================"
      echo "HTTP response code was $httpCode"
      echo "================================================================"
      echo "LOGIN SUCCEEDED WITH PROVIDED CLIENT_ID AND REDIRECT_URI"
    else
      echo "================================================================"
      echo "Was incorrectly redirected to login page"
      echo "HTTP response code was: $httpCode"
      echo "HTTP response was:"
      echo "================================================================"
      echo "$response"
      echo "================================================================"
      echo "LOGIN FAILED WITH SUPPLIED DETAILS"
      echo "================================================================"
      echo "Deleting the test user"
      echo "================================================================"
      curl -s -k -X DELETE "https://idam-api.aat.platform.hmcts.net/testing-support/accounts/$testUsername"
      exit 1
    fi
    done
    
    echo "================================================================"
    echo "Deleting the test user"
    echo "================================================================"
    curl -s -k -X DELETE "https://idam-api.aat.platform.hmcts.net/testing-support/accounts/$testUsername"
---
# Source: prl-ccd-definitions/charts/ccd/charts/postgresql/templates/primary/initialization-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-release-postgresql-init-scripts
  namespace: "default"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-11.6.10
    app.kubernetes.io/instance: test-release
    app.kubernetes.io/managed-by: Helm
data:
  init.sql: |
    CREATE DATABASE "data-store" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
    CREATE DATABASE "definition-store" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
    CREATE DATABASE "user-profile" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
    CREATE DATABASE "draftstore" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
    CREATE DATABASE "payment" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
    CREATE DATABASE "evidence" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
    CREATE DATABASE "annotation" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
    CREATE DATABASE "role_assignment" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
---
# Source: prl-ccd-definitions/charts/idam-pr/templates/bin-configmap-add.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ${SERVICE_NAME}-idam-pr-bin-add
  labels:
    type: configuration
    app.kubernetes.io/name: ${SERVICE_NAME}-idam-pr-bin-add
    helm.sh/chart: "idam-pr-2.3.0"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "test-release"
data:
  idam-pr-add: |
    #!/usr/bin/env sh
    set -ex
    
    for redirect_uri in https://case-management-web-${SERVICE_FQDN}/oauth2redirect
    do
    echo "Registering new redirect URI for service CCD: ${redirect_uri} using https://idam-api.aat.platform.hmcts.net"
    
    curl -v -k -X PATCH \
      https://idam-api.aat.platform.hmcts.net/testing-support/services/CCD \
      -H 'Accept: application/json' \
      -H 'Content-Type: application/json' \
      -d '[ {
    	"operation": "add",
    	"field": "redirect_uri",
    	"value": "'${redirect_uri}'"
    }
    ]'
    done
    
    for redirect_uri in https://admin-web-${SERVICE_FQDN}/oauth2redirect
    do
    echo "Registering new redirect URI for service CCD Admin: ${redirect_uri} using https://idam-api.aat.platform.hmcts.net"
    
    curl -v -k -X PATCH \
      https://idam-api.aat.platform.hmcts.net/testing-support/services/CCD%20Admin \
      -H 'Accept: application/json' \
      -H 'Content-Type: application/json' \
      -d '[ {
    	"operation": "add",
    	"field": "redirect_uri",
    	"value": "'${redirect_uri}'"
    }
    ]'
    done
    
    for redirect_uri in https://xui-${SERVICE_FQDN}/oauth2/callback
    do
    echo "Registering new redirect URI for service XUI: ${redirect_uri} using https://idam-api.aat.platform.hmcts.net"
    
    curl -v -k -X PATCH \
      https://idam-api.aat.platform.hmcts.net/testing-support/services/XUI \
      -H 'Accept: application/json' \
      -H 'Content-Type: application/json' \
      -d '[ {
    	"operation": "add",
    	"field": "redirect_uri",
    	"value": "'${redirect_uri}'"
    }
    ]'
    done
---
# Source: prl-ccd-definitions/charts/idam-pr/templates/bin-configmap-test.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ${SERVICE_NAME}-idam-pr-bin-test
  labels:
    type: configuration
    app.kubernetes.io/name: ${SERVICE_NAME}-idam-pr-bin-test
    helm.sh/chart: "idam-pr-2.3.0"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "test-release"
data:
  idam-pr-test: |
    #!/usr/bin/env sh
    
    set -x
    
    testUsername="$(mktemp -u 'james_bond.XXXXXX')$(date +%s)@hmcts.net"
    testPassword="Agent007"
    
    echo "================================================================"
    echo "Creating a new test user $testUsername"
    echo "================================================================"
    userCreationResponse=$(curl -s -k -i -X POST https://idam-api.aat.platform.hmcts.net/testing-support/accounts \
      -H 'Content-Type: application/json' \
      -d '{"email": "'$testUsername'", "forename": "James", "surname": "Bond", "password": "'$testPassword'", "roles": [{"code": "citizen"}]}' 2<&1)
    echo "HTTP response was:"
    echo "================================================================"
    echo "$userCreationResponse"
    echo "================================================================"
    
    echo "================================================================"
    echo "Testing each redirect_uri"
    echo "================================================================"
    
    for redirect_uri in https://case-management-web-${SERVICE_FQDN}/oauth2redirect
    do
    echo "================================================================"
    echo "Getting the csrf token: CCD / ${redirect_uri}"
    echo "================================================================"
    getLoginPage=$(curl -s -k -v -c /data/dir/cookies.txt -b /data/dir/cookies.txt 'https://idam-web-public.aat.platform.hmcts.net/login?redirect_uri=${redirect_uri}&client_id=CCD' 2<&1)
    csrf=$(cat /data/dir/cookies.txt | grep -oE 'TOKEN.*' | grep -oE '[^TOKEN\t]+' | tr -d '[:space:]' 2<&1)
    echo "================================================================"
    echo "found token $csrf: CCD / ${redirect_uri}"
    echo "================================================================"
    response=$(curl -s -k -i -c /data/dir/cookies.txt -b /data/dir/cookies.txt -d "_csrf=$csrf&client_id=CCD&username=$testUsername&password=$testPassword&redirect_uri=${redirect_uri}&state=12345&selfRegistrationEnabled=true" 'https://idam-web-public.aat.platform.hmcts.net/login' 2<&1)
    httpCode=$(echo $response | grep -Eo 302)
    
    if [ "$httpCode"  == "302" ]; then
      echo "================================================================"
      echo "HTTP response code was $httpCode"
      echo "================================================================"
      echo "LOGIN SUCCEEDED WITH PROVIDED CLIENT_ID AND REDIRECT_URI"
    else
      echo "================================================================"
      echo "Was incorrectly redirected to login page"
      echo "HTTP response code was: $httpCode"
      echo "HTTP response was:"
      echo "================================================================"
      echo "$response"
      echo "================================================================"
      echo "LOGIN FAILED WITH SUPPLIED DETAILS"
      echo "================================================================"
      echo "Deleting the test user"
      echo "================================================================"
      curl -s -k -X DELETE "https://idam-api.aat.platform.hmcts.net/testing-support/accounts/$testUsername"
      exit 1
    fi
    done
    
    for redirect_uri in https://admin-web-${SERVICE_FQDN}/oauth2redirect
    do
    echo "================================================================"
    echo "Getting the csrf token: CCD Admin / ${redirect_uri}"
    echo "================================================================"
    getLoginPage=$(curl -s -k -v -c /data/dir/cookies.txt -b /data/dir/cookies.txt 'https://idam-web-public.aat.platform.hmcts.net/login?redirect_uri=${redirect_uri}&client_id=CCD Admin' 2<&1)
    csrf=$(cat /data/dir/cookies.txt | grep -oE 'TOKEN.*' | grep -oE '[^TOKEN\t]+' | tr -d '[:space:]' 2<&1)
    echo "================================================================"
    echo "found token $csrf: CCD Admin / ${redirect_uri}"
    echo "================================================================"
    response=$(curl -s -k -i -c /data/dir/cookies.txt -b /data/dir/cookies.txt -d "_csrf=$csrf&client_id=CCD Admin&username=$testUsername&password=$testPassword&redirect_uri=${redirect_uri}&state=12345&selfRegistrationEnabled=true" 'https://idam-web-public.aat.platform.hmcts.net/login' 2<&1)
    httpCode=$(echo $response | grep -Eo 302)
    
    if [ "$httpCode"  == "302" ]; then
      echo "================================================================"
      echo "HTTP response code was $httpCode"
      echo "================================================================"
      echo "LOGIN SUCCEEDED WITH PROVIDED CLIENT_ID AND REDIRECT_URI"
    else
      echo "================================================================"
      echo "Was incorrectly redirected to login page"
      echo "HTTP response code was: $httpCode"
      echo "HTTP response was:"
      echo "================================================================"
      echo "$response"
      echo "================================================================"
      echo "LOGIN FAILED WITH SUPPLIED DETAILS"
      echo "================================================================"
      echo "Deleting the test user"
      echo "================================================================"
      curl -s -k -X DELETE "https://idam-api.aat.platform.hmcts.net/testing-support/accounts/$testUsername"
      exit 1
    fi
    done
    
    for redirect_uri in https://xui-${SERVICE_FQDN}/oauth2/callback
    do
    echo "================================================================"
    echo "Getting the csrf token: XUI / ${redirect_uri}"
    echo "================================================================"
    getLoginPage=$(curl -s -k -v -c /data/dir/cookies.txt -b /data/dir/cookies.txt 'https://idam-web-public.aat.platform.hmcts.net/login?redirect_uri=${redirect_uri}&client_id=XUI' 2<&1)
    csrf=$(cat /data/dir/cookies.txt | grep -oE 'TOKEN.*' | grep -oE '[^TOKEN\t]+' | tr -d '[:space:]' 2<&1)
    echo "================================================================"
    echo "found token $csrf: XUI / ${redirect_uri}"
    echo "================================================================"
    response=$(curl -s -k -i -c /data/dir/cookies.txt -b /data/dir/cookies.txt -d "_csrf=$csrf&client_id=XUI&username=$testUsername&password=$testPassword&redirect_uri=${redirect_uri}&state=12345&selfRegistrationEnabled=true" 'https://idam-web-public.aat.platform.hmcts.net/login' 2<&1)
    httpCode=$(echo $response | grep -Eo 302)
    
    if [ "$httpCode"  == "302" ]; then
      echo "================================================================"
      echo "HTTP response code was $httpCode"
      echo "================================================================"
      echo "LOGIN SUCCEEDED WITH PROVIDED CLIENT_ID AND REDIRECT_URI"
    else
      echo "================================================================"
      echo "Was incorrectly redirected to login page"
      echo "HTTP response code was: $httpCode"
      echo "HTTP response was:"
      echo "================================================================"
      echo "$response"
      echo "================================================================"
      echo "LOGIN FAILED WITH SUPPLIED DETAILS"
      echo "================================================================"
      echo "Deleting the test user"
      echo "================================================================"
      curl -s -k -X DELETE "https://idam-api.aat.platform.hmcts.net/testing-support/accounts/$testUsername"
      exit 1
    fi
    done
    
    echo "================================================================"
    echo "Deleting the test user"
    echo "================================================================"
    curl -s -k -X DELETE "https://idam-api.aat.platform.hmcts.net/testing-support/accounts/$testUsername"
---
# Source: prl-ccd-definitions/charts/aac-manage-case-assignment/charts/java/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ${service_name}-aac-manage-case-assignment  
  labels:
    app.kubernetes.io/name: ${service_name}-aac-manage-case-assignment
    helm.sh/chart: java-5.2.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 4454
  selector:
    app.kubernetes.io/name: ${service_name}-aac-manage-case-assignment
---
# Source: prl-ccd-definitions/charts/ccd-case-document-am-api/charts/java/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ${service_name}-cdam  
  labels:
    app.kubernetes.io/name: ${service_name}-cdam
    helm.sh/chart: java-5.2.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 4455
  selector:
    app.kubernetes.io/name: ${service_name}-cdam
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-admin-web/charts/nodejs/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-release-ccd-admin-web  
  labels:
    app.kubernetes.io/name: test-release-ccd-admin-web
    helm.sh/chart: nodejs-2.4.14
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 3100
  selector:
    app.kubernetes.io/name: test-release-ccd-admin-web
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-api-gateway-web/charts/nodejs/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-release-ccd-api-gw  
  labels:
    app.kubernetes.io/name: test-release-ccd-api-gw
    helm.sh/chart: nodejs-2.4.14
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 3453
  selector:
    app.kubernetes.io/name: test-release-ccd-api-gw
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-data-store-api/charts/java/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-release-ccd-data-store-api  
  labels:
    app.kubernetes.io/name: test-release-ccd-data-store-api
    helm.sh/chart: java-4.0.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 4452
  selector:
    app.kubernetes.io/name: test-release-ccd-data-store-api
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-definition-store-api/charts/java/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-release-ccd-definition-store  
  labels:
    app.kubernetes.io/name: test-release-ccd-definition-store
    helm.sh/chart: java-4.0.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 4451
  selector:
    app.kubernetes.io/name: test-release-ccd-definition-store
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-user-profile-api/charts/java/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-release-ccd-user-profile-api  
  labels:
    app.kubernetes.io/name: test-release-ccd-user-profile-api
    helm.sh/chart: java-4.0.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 4453
  selector:
    app.kubernetes.io/name: test-release-ccd-user-profile-api
---
# Source: prl-ccd-definitions/charts/ccd/charts/elasticsearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: ${SERVICE_NAME}-es-master
  labels:
    heritage: "Helm"
    release: "test-release"
    chart: "elasticsearch"
    app: "${SERVICE_NAME}-es-master"
  annotations:
    {}
spec:
  type: ClusterIP
  selector:
    release: "test-release"
    chart: "elasticsearch"
    app: "${SERVICE_NAME}-es-master"
  publishNotReadyAddresses: false
  ports:
  - name: http
    protocol: TCP
    port: 9200
  - name: transport
    protocol: TCP
    port: 9300
---
# Source: prl-ccd-definitions/charts/ccd/charts/elasticsearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: ${SERVICE_NAME}-es-master-headless
  labels:
    heritage: "Helm"
    release: "test-release"
    chart: "elasticsearch"
    app: "${SERVICE_NAME}-es-master"
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  clusterIP: None # This is needed for statefulset hostnames like elasticsearch-0 to resolve
  # Create endpoints also if the related pod isn't ready
  publishNotReadyAddresses: true
  selector:
    app: "${SERVICE_NAME}-es-master"
  ports:
  - name: http
    port: 9200
  - name: transport
    port: 9300
---
# Source: prl-ccd-definitions/charts/ccd/charts/logstash/templates/service-headless.yaml
kind: Service
apiVersion: v1
metadata:
  name: "test-release-logstash-headless"
  labels:
    app: "test-release-logstash"
    chart: "logstash"
    heritage: "Helm"
    release: "test-release"
spec:
  clusterIP: None
  selector:
    app: "test-release-logstash"
  ports:
    - name: http
      port: 9600
---
# Source: prl-ccd-definitions/charts/ccd/charts/postgresql/templates/primary/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-release-postgresql-hl
  namespace: "default"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-11.6.10
    app.kubernetes.io/instance: test-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
    # Use this annotation in addition to the actual publishNotReadyAddresses
    # field below because the annotation will stop being respected soon but the
    # field is broken in some versions of Kubernetes:
    # https://github.com/kubernetes/kubernetes/issues/58662
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  # We want all pods in the StatefulSet to have their addresses published for
  # the sake of the other Postgresql pods even before they're ready, since they
  # have to be able to talk to each other in order to become ready.
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: test-release
    app.kubernetes.io/component: primary
---
# Source: prl-ccd-definitions/charts/ccd/charts/postgresql/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-release-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-11.6.10
    app.kubernetes.io/instance: test-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
      nodePort: null
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: test-release
    app.kubernetes.io/component: primary
---
# Source: prl-ccd-definitions/charts/prl-cos/charts/java/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-release-java  
  labels:
    app.kubernetes.io/name: test-release-java
    helm.sh/chart: java-5.2.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 4044
  selector:
    app.kubernetes.io/name: test-release-java
---
# Source: prl-ccd-definitions/charts/xui-webapp/charts/nodejs/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ${service_name}-xui-webapp  
  labels:
    app.kubernetes.io/name: ${service_name}-xui-webapp
    helm.sh/chart: nodejs-3.1.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 3000
  selector:
    app.kubernetes.io/name: ${service_name}-xui-webapp
---
# Source: prl-ccd-definitions/charts/aac-manage-case-assignment/charts/java/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${service_name}-aac-manage-case-assignment  
  labels:
    app.kubernetes.io/name: ${service_name}-aac-manage-case-assignment
    helm.sh/chart: java-5.2.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release  
  annotations:
spec:
  revisionHistoryLimit: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ${service_name}-aac-manage-case-assignment
  template:
    metadata:    
      labels:
        app.kubernetes.io/name: ${service_name}-aac-manage-case-assignment
        helm.sh/chart: java-5.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: test-release
        azure.workload.identity/use: "true"    
      annotations:
    spec:
      serviceAccountName: default    
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.azure.com/mode
                    operator: NotIn
                    values:
                      - system
      securityContext:
        runAsUser: 1000
        fsGroup: 1000        
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.azure.com/agentpool
          whenUnsatisfiable: DoNotSchedule
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ${service_name}-aac-manage-case-assignment
          matchLabelKeys:
            - pod-template-hash
        - maxSkew: 2
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ${service_name}-aac-manage-case-assignment
          matchLabelKeys:
            - pod-template-hash
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ${service_name}-aac-manage-case-assignment
          matchLabelKeys:
            - pod-template-hash    
      dnsConfig:
        options:
          - name: ndots
            value: "3"
      volumes:        
      restartPolicy: "Always"
      terminationGracePeriodSeconds: 30
      containers:
        - image: hmctspublic.azurecr.io/aac/manage-case-assignment:latest
          name: ${service_name}-aac-manage-case-assignment
          securityContext:
            allowPrivilegeEscalation: false
          env:    
            - name: CCD_DATA_STORE_API_BASE_URL
              value: "http://${SERVICE_NAME}-ccd-data-store-api"
            - name: CCD_DEFINITION_STORE_API_BASE_URL
              value: "http://${SERVICE_NAME}-ccd-definition-store"
            - name: IDAM_API_URL
              value: "https://idam-api.aat.platform.hmcts.net"
            - name: IDAM_CAA_PASSWORD
              value: "${IDAM_CAA_PASSWORD}"
            - name: IDAM_CAA_USERNAME
              value: "${IDAM_CAA_USERNAME}"
            - name: IDAM_CLIENT_SECRET
              value: "${IDAM_MCA_CLIENT_SECRET}"
            - name: IDAM_NOC_APPROVER_PASSWORD
              value: "${IDAM_NOC_APPROVER_PASSWORD}"
            - name: IDAM_NOC_APPROVER_USERNAME
              value: "${IDAM_NOC_APPROVER_USERNAME}"
            - name: IDAM_OIDC_URL
              value: "https://idam-web-public.aat.platform.hmcts.net"
            - name: JAVA_TOOL_OPTIONS
              value: "-Xms128m -Xmx600m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
            - name: MANAGE_CASE_DEFAULT_LOG_LEVEL
              value: "INFO"
            - name: MANAGE_CASE_S2S_AUTHORISED_SERVICES
              value: "xui_webapp,ccd_data,prl_cos_api,prl_citizen_frontend"
            - name: MANAGE_CASE_S2S_KEY
              value: "${MANAGE_CASE_S2S_KEY}"
            - name: MCA_DEF_STORE_PROXY_URLS_ALLOWED_LIST
              value: "/api/display/challenge-questions.*"
            - name: MCA_DS_PROXY_URLS_ALLOWED_LIST
              value: "/searchCases.*,/internal/searchCases.*,/internal/cases.*"
            - name: NOTIFY_MCA_API_KEY
              value: "${NOTIFY_MCA_API_KEY}"
            - name: OIDC_ISSUER
              value: "https://forgerock-am.service.core-compute-idam-aat.internal:8443/openam/oauth2/hmcts"
            - name: PRD_HOST
              value: "http://rd-professional-api-aat.service.core-compute-aat.internal"
            - name: ROLE_ASSIGNMENT_URL
              value: "http://am-role-assignment-service-aat.service.core-compute-aat.internal"
            - name: S2S_URL
              value: "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
            - name: autoscaling
              value: "map[enabled:false]"
          volumeMounts:    
          resources:
            requests:
              memory: "1024Mi"
              cpu: "250m"
            limits:
              memory: "2048Mi"
              cpu: "1500m"
          ports:
            - containerPort: 4454
              name: http
          startupProbe:
            httpGet:
              path: /health/liveness
              port: 4454
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 20
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 4454
            initialDelaySeconds: 0
            timeoutSeconds: 3
            periodSeconds: 15
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: 4454
            initialDelaySeconds: 0
            timeoutSeconds: 3
            periodSeconds: 15
          imagePullPolicy: Always
---
# Source: prl-ccd-definitions/charts/ccd-case-document-am-api/charts/java/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${service_name}-cdam  
  labels:
    app.kubernetes.io/name: ${service_name}-cdam
    helm.sh/chart: java-5.2.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release  
  annotations:
spec:
  revisionHistoryLimit: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ${service_name}-cdam
  template:
    metadata:    
      labels:
        app.kubernetes.io/name: ${service_name}-cdam
        helm.sh/chart: java-5.2.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: test-release
        azure.workload.identity/use: "true"    
      annotations:
    spec:
      serviceAccountName: default    
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.azure.com/mode
                    operator: NotIn
                    values:
                      - system
      securityContext:
        runAsUser: 1000
        fsGroup: 1000        
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.azure.com/agentpool
          whenUnsatisfiable: DoNotSchedule
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ${service_name}-cdam
          matchLabelKeys:
            - pod-template-hash
        - maxSkew: 2
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ${service_name}-cdam
          matchLabelKeys:
            - pod-template-hash
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ${service_name}-cdam
          matchLabelKeys:
            - pod-template-hash    
      dnsConfig:
        options:
          - name: ndots
            value: "3"
      volumes:        
      restartPolicy: "Always"
      terminationGracePeriodSeconds: 30
      containers:
        - image: hmctspublic.azurecr.io/ccd/case-document-am-api:latest
          name: ${service_name}-cdam
          securityContext:
            allowPrivilegeEscalation: false
          env:    
            - name: CASE_DOCUMENT_AM_API_S2S_SECRET
              value: "${CCD_CASE_DOCUMENT_AM_API_SECRET}"
            - name: CASE_DOCUMENT_S2S_AUTHORISED_SERVICES
              value: "ccd_case_document_am_api,ccd_gw,xui_webapp,ccd_data,bulk_scan_processor,sscs,probate_backend,iac,em_npa_app,fprl_dgs_api,dg_docassembly_api,em_stitching_api,em_ccd_orchestrator,cmc_claim_store,civil_service,bulk_scan_orchestrator,ethos_repl_service,divorce_document_generator,finrem_document_generator,finrem_case_orchestration,fpl_case_service,et_cos,prl_cos_api,prl_dgs_api,et_sya_api,adoption_cos_api,adoption_web,nfdiv_case_api,divorce_frontend,sptribs_case_api,sptribs_dss_backend,civil_general_applications,prl_citizen_frontend"
            - name: CCD_DATA_STORE_API_BASE_URL
              value: "http://${SERVICE_NAME}-ccd-data-store-api"
            - name: DM_STORE_BASE_URL
              value: "http://dm-store-aat.service.core-compute-aat.internal"
            - name: HASH_CHECK_ENABLED
              value: "false"
            - name: IDAM_API_URL
              value: "https://idam-api.aat.platform.hmcts.net"
            - name: IDAM_OIDC_URL
              value: "https://idam-web-public.aat.platform.hmcts.net"
            - name: OIDC_ISSUER
              value: "https://forgerock-am.service.core-compute-idam-aat.internal:8443/openam/oauth2/hmcts"
            - name: S2S_URL
              value: "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
          volumeMounts:    
          resources:
            requests:
              memory: "1024Mi"
              cpu: "250m"
            limits:
              memory: "2048Mi"
              cpu: "1500m"
          ports:
            - containerPort: 4455
              name: http
          startupProbe:
            httpGet:
              path: /health/liveness
              port: 4455
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 20
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 4455
            initialDelaySeconds: 0
            timeoutSeconds: 3
            periodSeconds: 15
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: 4455
            initialDelaySeconds: 0
            timeoutSeconds: 3
            periodSeconds: 15
          imagePullPolicy: Always
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-admin-web/charts/nodejs/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-release-ccd-admin-web  
  labels:
    app.kubernetes.io/name: test-release-ccd-admin-web
    helm.sh/chart: nodejs-2.4.14
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd  
  annotations:
spec:
  revisionHistoryLimit: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: test-release-ccd-admin-web
  template:
    metadata:    
      labels:
        app.kubernetes.io/name: test-release-ccd-admin-web
        helm.sh/chart: nodejs-2.4.14
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: test-release
        aadpodidbinding: ccd    
      annotations:
    spec:
      serviceAccountName: test-release-ccd-admin-web    
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - test-release-ccd-admin-web
              topologyKey: "kubernetes.io/hostname"
      securityContext:
        runAsUser: 1000
        fsGroup: 1000        
      dnsConfig:
        options:
          - name: ndots
            value: "3"
      restartPolicy: "Always"
      containers:
        - image: hmctspublic.azurecr.io/ccd/admin-web:latest
          name: test-release-ccd-admin-web
          securityContext:
            allowPrivilegeEscalation: false
          env:    
            - name: ADMINWEB_AUTHORIZATION_URL
              value: "http://test-release-ccd-definition-store/api/idam/adminweb/authorization"
            - name: ADMINWEB_CREATE_DEFINITION_URL
              value: "http://test-release-ccd-definition-store/api/draft"
            - name: ADMINWEB_DEFINITIONS_URL
              value: "http://test-release-ccd-definition-store/api/drafts"
            - name: ADMINWEB_DELETE_DEFINITION_URL
              value: "http://test-release-ccd-definition-store/api/draft"
            - name: ADMINWEB_ELASTIC_CASE_TYPES_URL
              value: "http://ccd-definition-store-api-.service.core-compute-.internal/elastic-support/case-types"
            - name: ADMINWEB_ELASTIC_INDEX_URL
              value: "http://test-release-ccd-definition-store/elastic-support/index"
            - name: ADMINWEB_GET_DICTIONARY_URL
              value: "http://ts-translation-service-.service.core-compute-.internal/dictionary"
            - name: ADMINWEB_GLOBAL_SEARCH_INDEX_URL
              value: "http://ccd-definition-store-api-.service.core-compute-.internal/elastic-support/global-search/index"
            - name: ADMINWEB_IMPORT_AUDITS_URL
              value: "http://test-release-ccd-definition-store/api/import-audits"
            - name: ADMINWEB_IMPORT_URL
              value: "http://test-release-ccd-definition-store/import"
            - name: ADMINWEB_JURISDICTIONS_URL
              value: "http://test-release-ccd-definition-store/api/data/jurisdictions"
            - name: ADMINWEB_LOGIN_URL
              value: "https://idam-web-public.aat.platform.hmcts.net/login"
            - name: ADMINWEB_ROLES_WHITELIST
              value: "ccd-import,ccd-import-validate"
            - name: ADMINWEB_SAVE_USER_PROFILE_URL
              value: "http://test-release-ccd-user-profile-api/users/save"
            - name: ADMINWEB_UPDATE_DEFINITION_URL
              value: "http://test-release-ccd-definition-store/api/draft/save"
            - name: ADMINWEB_USER_PROFILE_URL
              value: "http://test-release-ccd-user-profile-api/users"
            - name: ADMINWEB_USER_ROLE_URL
              value: "http://test-release-ccd-definition-store/api/user-role"
            - name: ADMINWEB_WHOAMI_URL
              value: "http://test-release-ccd-definition-store/api/idam/profile"
            - name: ADMIN_ALL_USER_ROLES_URL
              value: "http://test-release-ccd-definition-store/api/user-roles"
            - name: HPKP_MAX_AGE
              value: "2.592e+06"
            - name: HPKP_SHA256S
              value: "Set-proper-SHA256s"
            - name: IDAM_ADMIN_WEB_SERVICE_KEY
              value: "${ADMIN_S2S_KEY}"
            - name: IDAM_BASE_URL
              value: "https://idam-api.aat.platform.hmcts.net"
            - name: IDAM_OAUTH2_AW_CLIENT_SECRET
              value: "${ADMIN_WEB_IDAM_SECRET}"
            - name: IDAM_OAUTH2_CLIENT_ID
              value: "ccd_admin"
            - name: IDAM_OAUTH2_LOGOUT_ENDPOINT
              value: "https://idam-api.aat.platform.hmcts.net/session/:token"
            - name: IDAM_OAUTH2_TOKEN_ENDPOINT
              value: "https://idam-api.aat.platform.hmcts.net/oauth2/token"
            - name: IDAM_S2S_URL
              value: "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
            - name: IDAM_SERVICE_NAME
              value: "ccd_admin"
            - name: NODE_CONFIG_DIR
              value: "./config"
            - name: NODE_ENV
              value: "production"
            - name: REFORM_ENVIRONMENT
              value: ""
            - name: REFORM_SERVICE_NAME
              value: "admin-web"
            - name: REFORM_TEAM
              value: "ccd"
            - name: SECURE_AUTH_COOKIE_ENABLED
              value: "true"
            - name: SECURITY_REFERRER_POLICY
              value: "origin"
            - name: TS_BASE_URL
              value: "./src/main"
            - name: USER_PROFILE_DB_HOST
              value: "${SERVICE_NAME}-postgresql"
            - name: USE_CSRF_PROTECTION
              value: "true"
            - name: UV_THREADPOOL_SIZE
              value: "64"  
          resources:
            requests:
              memory: "512Mi"
              cpu: "25m"
            limits:
              memory: "512Mi"
              cpu: "1"
          ports:
            - containerPort: 3100
              name: http
          startupProbe:
            httpGet:
              path: /health/liveness
              port: 3100
            initialDelaySeconds: 5
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 15
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 3100
            initialDelaySeconds: 0
            timeoutSeconds: 3
            periodSeconds: 15
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: 3100
            initialDelaySeconds: 0
            timeoutSeconds: 3
            periodSeconds: 15
          imagePullPolicy: IfNotPresent
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-api-gateway-web/charts/nodejs/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-release-ccd-api-gw  
  labels:
    app.kubernetes.io/name: test-release-ccd-api-gw
    helm.sh/chart: nodejs-2.4.14
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd  
  annotations:
spec:
  revisionHistoryLimit: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: test-release-ccd-api-gw
  template:
    metadata:    
      labels:
        app.kubernetes.io/name: test-release-ccd-api-gw
        helm.sh/chart: nodejs-2.4.14
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: test-release
        aadpodidbinding: ccd    
      annotations:
    spec:
      serviceAccountName: test-release-ccd-api-gw    
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - test-release-ccd-api-gw
              topologyKey: "kubernetes.io/hostname"
      securityContext:
        runAsUser: 1000
        fsGroup: 1000        
      dnsConfig:
        options:
          - name: ndots
            value: "3"
      restartPolicy: "Always"
      containers:
        - image: hmctspublic.azurecr.io/ccd/api-gateway-web:latest
          name: test-release-ccd-api-gw
          securityContext:
            allowPrivilegeEscalation: false
          env:    
            - name: ADDRESS_LOOKUP_TOKEN
              value: "${ADDRESS_LOOKUP_TOKEN}"
            - name: CACHE_USER_INFO_CHECK_PERIOD
              value: "120"
            - name: CACHE_USER_INFO_ENABLED
              value: "true"
            - name: CACHE_USER_INFO_TTL
              value: "600"
            - name: CORS_ORIGIN_METHODS
              value: "GET,POST,OPTIONS,PUT,DELETE"
            - name: CORS_ORIGIN_WHITELIST
              value: "https://ccd-case-management-web-.service.core-compute-.internal,https://ccd-case-management-web--staging.service.core-compute-.internal,https://www-ccd..platform.hmcts.net,https://www-ccd.nonprod.platform.hmcts.net,https://www.ccd.platform.hmcts.net"
            - name: IDAM_BASE_URL
              value: "https://idam-api.aat.platform.hmcts.net"
            - name: IDAM_OAUTH2_CLIENT_ID
              value: "ccd_gateway"
            - name: IDAM_OAUTH2_CLIENT_SECRET
              value: "${API_GATEWAY_IDAM_SECRET}"
            - name: IDAM_OAUTH2_LOGOUT_ENDPOINT
              value: "https://idam-api.aat.platform.hmcts.net/session/:token"
            - name: IDAM_OAUTH2_TOKEN_ENDPOINT
              value: "https://idam-api.aat.platform.hmcts.net/oauth2/token"
            - name: IDAM_S2S_URL
              value: "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
            - name: IDAM_SERVICE_KEY
              value: "${API_GATEWAY_S2S_KEY}"
            - name: IDAM_SERVICE_NAME
              value: "ccd_gw"
            - name: PROXY_AGGREGATED
              value: "http://test-release-ccd-data-store-api"
            - name: PROXY_CASE_ACTIVITY
              value: "http://ccd-case-activity-api"
            - name: PROXY_DATA
              value: "http://test-release-ccd-data-store-api"
            - name: PROXY_DEFINITION_IMPORT
              value: "http://test-release-ccd-definition-store"
            - name: PROXY_DOCUMENT_MANAGEMENT
              value: "http://dm-store-aat.service.core-compute-aat.internal"
            - name: PROXY_MV_ANNOTATIONS_API_URL
              value: "http://test-release-em-annotation"
            - name: PROXY_PAYMENTS
              value: "http://test-release-payment-api"
            - name: PROXY_PAY_BULKSCAN
              value: "http://ccpay-bulkscanning-api-.service.core-compute-.internal"
            - name: PROXY_PRINT_SERVICE
              value: "http://ccd-case-print-service-${SERVICE_FQDN}"
            - name: PROXY_REFDATA
              value: "http://rd-professional-api-.service.core-compute-.internal"
            - name: SECURE_AUTH_COOKIE_ENABLED
              value: "true"
            - name: TIMING-ALLOW-ORIGIN
              value: "https://ccd-case-management-web-.service.core-compute-.internal,https://ccd-case-management-web--staging.service.core-compute-.internal"
            - name: UV_THREADPOOL_SIZE
              value: "64"  
          resources:
            requests:
              memory: "512Mi"
              cpu: "25m"
            limits:
              memory: "512Mi"
              cpu: "1"
          ports:
            - containerPort: 3453
              name: http
          startupProbe:
            httpGet:
              path: /health/liveness
              port: 3453
            initialDelaySeconds: 5
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 15
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 3453
            initialDelaySeconds: 0
            timeoutSeconds: 3
            periodSeconds: 15
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: 3453
            initialDelaySeconds: 0
            timeoutSeconds: 3
            periodSeconds: 15
          imagePullPolicy: IfNotPresent
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-data-store-api/charts/java/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-release-ccd-data-store-api  
  labels:
    app.kubernetes.io/name: test-release-ccd-data-store-api
    helm.sh/chart: java-4.0.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd  
  annotations:
spec:
  revisionHistoryLimit: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: test-release-ccd-data-store-api
  template:
    metadata:    
      labels:
        app.kubernetes.io/name: test-release-ccd-data-store-api
        helm.sh/chart: java-4.0.13
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: test-release
        aadpodidbinding: ccd    
      annotations:
    spec:
      serviceAccountName: test-release-ccd-data-store-api    
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - test-release-ccd-data-store-api
              topologyKey: "kubernetes.io/hostname"
      securityContext:
        runAsUser: 1000
        fsGroup: 1000        
      dnsConfig:
        options:
          - name: ndots
            value: "3"
      restartPolicy: "Always"
      containers:
        - image: hmctspublic.azurecr.io/ccd/data-store-api:latest
          name: test-release-ccd-data-store-api
          securityContext:
            allowPrivilegeEscalation: false
          env:    
            - name: CASE_DOCUMENT_AM_URL
              value: "http://${SERVICE_NAME}-cdam"
            - name: CCD_DEFAULTPRINTURL
              value: "https://return-case-doc-ccd.nonprod.platform.hmcts.net/jurisdictions/:jid/case-types/:ctid/cases/:cid"
            - name: CCD_DOCUMENT_URL_PATTERN
              value: "https?://(dm-store.*|em-hrs-api.*)"
            - name: CCD_DRAFT_STORE_URL
              value: "http://test-release-draft-store"
            - name: CCD_DRAFT_TTL_DAYS
              value: "180"
            - name: CCD_S2S_AUTHORISED_SERVICES_CASE_USER_ROLES
              value: "aac_manage_case_assignment,prl_cos_api,prl_citizen_frontend"
            - name: DATA_STORE_CITIZEN_ROLES
              value: "citizen,letter-holder"
            - name: DATA_STORE_CROSS_JURISDICTIONAL_ROLES
              value: "caseworker-caa,caseworker-approver,next-hearing-date-admin"
            - name: DATA_STORE_DB_HOST
              value: "${SERVICE_NAME}-postgresql"
            - name: DATA_STORE_DB_MAX_POOL_SIZE
              value: "10"
            - name: DATA_STORE_DB_NAME
              value: "data-store"
            - name: DATA_STORE_DB_OPTIONS
              value: "?stringtype=unspecified"
            - name: DATA_STORE_DB_PASSWORD
              value: "hmcts"
            - name: DATA_STORE_DB_PORT
              value: "5432"
            - name: DATA_STORE_DB_USERNAME
              value: "hmcts"
            - name: DATA_STORE_DEFAULT_LOG_LEVEL
              value: "INFO"
            - name: DATA_STORE_IDAM_KEY
              value: "${DATA_STORE_S2S_KEY}"
            - name: DATA_STORE_S2S_AUTHORISED_SERVICES
              value: "ccd_data,ccd_gw,ccd_ps,probate_backend,divorce_ccd_submission,sscs,sscs_bulkscan,cmc,cmc_claim_store,cmc_claim_external_api,jui_webapp,pui_webapp,bulk_scan_orchestrator,fpl_case_service,iac,finrem_ccd_data_migrator,finrem_case_orchestration,employment_tribunals,ethos_repl_service,ccpay_bubble,ctsc_work_allocation,em_ccd_orchestrator,xui_webapp,bulk_scan_payment_processor,pcq_consolidation_service,em_npa_app,ecm_consumer,aac_manage_case_assignment,unspec_service,divorce_frontend,wa_task_configuration_api,wa_task_monitor,ccd_case_document_am_api,prl_cos_api,prl_citizen_frontend"
            - name: DATA_STORE_SECURITY_LOGGING_FILTER_PATH_REGEX
              value: ".*"
            - name: DEFAULT_CACHE_MAX_IDLE_SEC
              value: "14400"
            - name: DEFAULT_CACHE_TTL_SEC
              value: "30"
            - name: DEFINITION_CACHE_JURISDICTION_TTL_SEC
              value: "120"
            - name: DEFINITION_STORE_HOST
              value: "http://test-release-ccd-definition-store"
            - name: ELASTIC_SEARCH_BLACKLIST
              value: "query_string,runtime_mappings"
            - name: ELASTIC_SEARCH_CASE_INDEX_NAME_FORMAT
              value: "%s_cases"
            - name: ELASTIC_SEARCH_CASE_INDEX_TYPE
              value: "_doc"
            - name: ELASTIC_SEARCH_DATA_NODES_HOSTS
              value: "http://${SERVICE_NAME}-es-master:9200"
            - name: ELASTIC_SEARCH_ENABLED
              value: "true"
            - name: ELASTIC_SEARCH_HOSTS
              value: "${SERVICE_NAME}-es-master:9200"
            - name: ELASTIC_SEARCH_NODES_DISCOVERY_ENABLED
              value: "false"
            - name: ELASTIC_SEARCH_NODES_DISCOVERY_FILTER
              value: "_all"
            - name: ELASTIC_SEARCH_NODES_DISCOVERY_FREQUENCY_MILLIS
              value: "5000"
            - name: ELASTIC_SEARCH_REQUEST_TIMEOUT
              value: "6000"
            - name: ENABLE_DB_MIGRATE
              value: "true"
            - name: HTTP_CLIENT_CONNECTION_TIMEOUT
              value: "10000"
            - name: HTTP_CLIENT_MAX_CLIENT_PER_ROUTE
              value: "20"
            - name: HTTP_CLIENT_MAX_TOTAL
              value: "200"
            - name: HTTP_CLIENT_READ_TIMEOUT
              value: "60000"
            - name: HTTP_CLIENT_SECONDS_IDLE_CONNECTION
              value: "120"
            - name: HTTP_CLIENT_VALIDATE_AFTER_INACTIVITY
              value: "2000"
            - name: IDAM_API_BASE_URL
              value: "https://idam-api.aat.platform.hmcts.net"
            - name: IDAM_DATA_STORE_SYSTEM_USER_PASSWORD
              value: "${IDAM_DATA_STORE_SYSTEM_USER_PASSWORD}"
            - name: IDAM_DATA_STORE_SYSTEM_USER_USERNAME
              value: "${IDAM_DATA_STORE_SYSTEM_USER_USERNAME}"
            - name: IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET
              value: "${IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET}"
            - name: IDAM_OIDC_URL
              value: "https://idam-web-public.aat.platform.hmcts.net"
            - name: IDAM_S2S_URL
              value: "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
            - name: LOG_AND_AUDIT_CASE_ENABLED
              value: "false"
            - name: LOG_AND_AUDIT_CASE_URL
              value: "http://lau-case-backend-.service.core-compute-.internal"
            - name: LOG_CALLBACK_DETAILS
              value: 
            - name: MANAGEMENT_HEALTH_CASE_DOCUMENT_AM_API_ENABLED
              value: "false"
            - name: NODE_TLS_REJECT_UNAUTHORIZED
              value: "0"
            - name: OIDC_ISSUER
              value: "https://forgerock-am.service.core-compute-idam-.internal:8443/openam/oauth2/hmcts"
            - name: RD_LOCATION_REF_API_BASE_URL
              value: "http://rd-location-ref-api-.service.core-compute-.internal"
            - name: ROLE_ASSIGNMENT_URL
              value: "http://am-role-assignment-service-aat.service.core-compute-aat.internal"
            - name: TTL_GUARD
              value: "365"
            - name: USER_PROFILE_HOST
              value: "http://test-release-ccd-user-profile-api"  
          resources:
            requests:
              memory: "1024Mi"
              cpu: "250m"
            limits:
              memory: "2048Mi"
              cpu: "1500m"
          ports:
            - containerPort: 4452
              name: http
          startupProbe:
            httpGet:
              path: /health/liveness
              port: 4452
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 20
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 4452
            initialDelaySeconds: 0
            timeoutSeconds: 3
            periodSeconds: 15
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: 4452
            initialDelaySeconds: 0
            timeoutSeconds: 3
            periodSeconds: 15
          imagePullPolicy: Always
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-definition-store-api/charts/java/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-release-ccd-definition-store  
  labels:
    app.kubernetes.io/name: test-release-ccd-definition-store
    helm.sh/chart: java-4.0.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd  
  annotations:
spec:
  revisionHistoryLimit: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: test-release-ccd-definition-store
  template:
    metadata:    
      labels:
        app.kubernetes.io/name: test-release-ccd-definition-store
        helm.sh/chart: java-4.0.13
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: test-release
        aadpodidbinding: ccd    
      annotations:
    spec:
      serviceAccountName: test-release-ccd-definition-store    
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - test-release-ccd-definition-store
              topologyKey: "kubernetes.io/hostname"
      securityContext:
        runAsUser: 1000
        fsGroup: 1000        
      dnsConfig:
        options:
          - name: ndots
            value: "3"
      restartPolicy: "Always"
      containers:
        - image: hmctspublic.azurecr.io/ccd/definition-store-api:latest
          name: test-release-ccd-definition-store
          securityContext:
            allowPrivilegeEscalation: false
          env:    
            - name: ADMIN_WEB_AUTHORIZATION_ENABLED
              value: "false"
            - name: ADMIN_WEB_AUTHORIZATION_IMPORT_DEFINITION_0
              value: "ccd-import"
            - name: ADMIN_WEB_AUTHORIZATION_LOAD_WELSH_TRANSLATION_0
              value: "load-translations"
            - name: ADMIN_WEB_AUTHORIZATION_MANAGE_DEFINITION_0
              value: "ccd-import"
            - name: ADMIN_WEB_AUTHORIZATION_MANAGE_USER_PROFILE_0
              value: "ccd-import"
            - name: ADMIN_WEB_AUTHORIZATION_MANAGE_USER_ROLE_0
              value: "ccd-import"
            - name: ADMIN_WEB_AUTHORIZATION_MANAGE_WELSH_TRANSLATION_0
              value: "manage-translations"
            - name: AZURE_STORAGE_BLOB_CONTAINER_REFERENCE
              value: "definition-store"
            - name: AZURE_STORAGE_CONNECTION_STRING
              value: "DefaultEndpointsProtocol=https;AccountName=$(STORAGE_ACCOUNT_NAME);AccountKey=$(STORAGE_ACCOUNT_KEY);EndpointSuffix=core.windows.net"
            - name: AZURE_STORAGE_DEFINITION_UPLOAD_ENABLED
              value: "false"
            - name: AZURE_STORAGE_IMPORT_AUDITS_GET_LIMIT
              value: "20"
            - name: DEFINITION_STORE_DB_HOST
              value: "${SERVICE_NAME}-postgresql"
            - name: DEFINITION_STORE_DB_MAX_POOL_SIZE
              value: "5"
            - name: DEFINITION_STORE_DB_NAME
              value: "definition-store"
            - name: DEFINITION_STORE_DB_OPTIONS
              value: ""
            - name: DEFINITION_STORE_DB_PASSWORD
              value: "hmcts"
            - name: DEFINITION_STORE_DB_PORT
              value: "5432"
            - name: DEFINITION_STORE_DB_USERNAME
              value: "hmcts"
            - name: DEFINITION_STORE_DEFAULT_LOG_LEVEL
              value: "DEBUG"
            - name: DEFINITION_STORE_IDAM_KEY
              value: "${DEFINITION_STORE_S2S_KEY}"
            - name: DEFINITION_STORE_S2S_AUTHORISED_SERVICES
              value: "ccd_admin,ccd_data,ccd_gw,aac_manage_case_assignment,prl_citizen_frontend"
            - name: DEFINITION_STORE_TX_TIMEOUT_DEFAULT
              value: "120"
            - name: ELASTIC_SEARCH_CASE_INDEX_MAPPING_FIELDS_LIMIT
              value: "50000"
            - name: ELASTIC_SEARCH_CASE_INDEX_NAME_FORMAT
              value: "%s_cases"
            - name: ELASTIC_SEARCH_DYNAMIC
              value: "true"
            - name: ELASTIC_SEARCH_ENABLED
              value: "true"
            - name: ELASTIC_SEARCH_FAIL_ON_IMPORT
              value: "true"
            - name: ELASTIC_SEARCH_HOST
              value: "${SERVICE_NAME}-es-master"
            - name: ELASTIC_SEARCH_INDEX_SHARDS
              value: "2"
            - name: ELASTIC_SEARCH_INDEX_SHARDS_REPLICAS
              value: "1"
            - name: ELASTIC_SEARCH_PORT
              value: "9200"
            - name: ELASTIC_SEARCH_SCHEME
              value: "http"
            - name: ENABLE_DB_MIGRATE
              value: "true"
            - name: FLYWAY_NOOP_STRATEGY
              value: "false"
            - name: IDAM_API_BASE_URL
              value: "https://idam-api.aat.platform.hmcts.net"
            - name: IDAM_OIDC_URL
              value: "https://idam-web-public.aat.platform.hmcts.net"
            - name: IDAM_S2S_URL
              value: "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
            - name: IDAM_USER_URL
              value: "https://idam-web-public.aat.platform.hmcts.net"
            - name: OIDC_ISSUER
              value: "https://forgerock-am.service.core-compute-idam-aat.internal:8443/openam/oauth2/hmcts"
            - name: TS_TRANSLATION_SERVICE_HOST
              value: "http://ts-translation-service-.service.core-compute-.internal"
            - name: USER_PROFILE_HOST
              value: "http://test-release-ccd-user-profile-api"
            - name: WELSH_TRANSLATION_ENABLED
              value: "true"  
          resources:
            requests:
              memory: "1G"
              cpu: "250m"
            limits:
              memory: "2G"
              cpu: "1500m"
          ports:
            - containerPort: 4451
              name: http
          startupProbe:
            httpGet:
              path: /health/liveness
              port: 4451
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 20
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 4451
            initialDelaySeconds: 0
            timeoutSeconds: 3
            periodSeconds: 15
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: 4451
            initialDelaySeconds: 0
            timeoutSeconds: 3
            periodSeconds: 15
          imagePullPolicy: Always
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-user-profile-api/charts/java/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-release-ccd-user-profile-api  
  labels:
    app.kubernetes.io/name: test-release-ccd-user-profile-api
    helm.sh/chart: java-4.0.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd  
  annotations:
spec:
  revisionHistoryLimit: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: test-release-ccd-user-profile-api
  template:
    metadata:    
      labels:
        app.kubernetes.io/name: test-release-ccd-user-profile-api
        helm.sh/chart: java-4.0.13
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: test-release
        aadpodidbinding: ccd    
      annotations:
    spec:
      serviceAccountName: test-release-ccd-user-profile-api    
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - test-release-ccd-user-profile-api
              topologyKey: "kubernetes.io/hostname"
      securityContext:
        runAsUser: 1000
        fsGroup: 1000        
      dnsConfig:
        options:
          - name: ndots
            value: "3"
      restartPolicy: "Always"
      containers:
        - image: hmctspublic.azurecr.io/ccd/user-profile-api:latest
          name: test-release-ccd-user-profile-api
          securityContext:
            allowPrivilegeEscalation: false
          env:    
            - name: ENABLE_DB_MIGRATE
              value: "true"
            - name: IDAM_S2S_URL
              value: "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
            - name: LOGBACK_REQUIRE_ALERT_LEVEL
              value: "false"
            - name: LOGBACK_REQUIRE_ERROR_CODE
              value: "false"
            - name: USER_PROFILE_DB_HOST
              value: "test-release-postgresql"
            - name: USER_PROFILE_DB_NAME
              value: "user-profile"
            - name: USER_PROFILE_DB_OPTIONS
              value: "?stringtype=unspecified"
            - name: USER_PROFILE_DB_PASSWORD
              value: "hmcts"
            - name: USER_PROFILE_DB_PORT
              value: "5432"
            - name: USER_PROFILE_DB_USERNAME
              value: "hmcts"
            - name: USER_PROFILE_S2S_AUTHORISED_SERVICES
              value: "ccd_data,ccd_definition,ccd_admin,rd_professional_api"  
          resources:
            requests:
              memory: "1024Mi"
              cpu: "250m"
            limits:
              memory: "2048Mi"
              cpu: "1500m"
          ports:
            - containerPort: 4453
              name: http
          startupProbe:
            httpGet:
              path: /health/liveness
              port: 4453
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 20
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 4453
            initialDelaySeconds: 0
            timeoutSeconds: 3
            periodSeconds: 15
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: 4453
            initialDelaySeconds: 0
            timeoutSeconds: 3
            periodSeconds: 15
          imagePullPolicy: Always
---
# Source: prl-ccd-definitions/charts/prl-cos/charts/java/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-release-java  
  labels:
    app.kubernetes.io/name: test-release-java
    helm.sh/chart: java-5.2.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release  
  annotations:
spec:
  revisionHistoryLimit: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: test-release-java
  template:
    metadata:    
      labels:
        app.kubernetes.io/name: test-release-java
        helm.sh/chart: java-5.2.1
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: test-release
        azure.workload.identity/use: "true"    
      annotations:
    spec:
      serviceAccountName: default    
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.azure.com/mode
                    operator: NotIn
                    values:
                      - system
      securityContext:
        runAsUser: 1000
        fsGroup: 1000        
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.azure.com/agentpool
          whenUnsatisfiable: DoNotSchedule
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: test-release-java
          matchLabelKeys:
            - pod-template-hash
        - maxSkew: 2
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: test-release-java
          matchLabelKeys:
            - pod-template-hash
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: test-release-java
          matchLabelKeys:
            - pod-template-hash    
      dnsConfig:
        options:
          - name: ndots
            value: "3"
      volumes:        
      restartPolicy: "Always"
      terminationGracePeriodSeconds: 30
      containers:
        - image: hmctspublic.azurecr.io/prl/cos:latest
          name: test-release-java
          securityContext:
            allowPrivilegeEscalation: false
          env:    
            - name: ACA_SERVICE_API_BASEURL
              value: "http://${SERVICE_NAME}-aac-manage-case-assignment"
            - name: AM_ROLE_ASSIGNMENT_API_URL
              value: "http://am-role-assignment-service-.service.core-compute-.internal"
            - name: APP_ENV
              value: "preview"
            - name: AUTH_IDAM_CLIENT_BASEURL
              value: "https://idam-api..platform.hmcts.net"
            - name: AUTH_PROVIDER_SERVICE_CLIENT_BASEURL
              value: "http://rpe-service-auth-provider-.service.core-compute-.internal"
            - name: AUTH_PROVIDER_SERVICE_CLIENT_MICROSERVICE
              value: "prl_cos_api"
            - name: AUTH_PROVIDER_SERVICE_CLIENT_TOKENTIMETOLIVEINSECONDS
              value: "900"
            - name: BUNDLE_URL
              value: "http://${SERVICE_NAME}-em-ccdorc"
            - name: CCD_CASE_DOCS_AM_API
              value: "http://${SERVICE_NAME}-cdam"
            - name: CITIZEN_URL
              value: "https://privatelaw..platform.hmcts.net"
            - name: COMMON_DATA_API
              value: "http://rd-commondata-api-.service.core-compute-.internal"
            - name: CORE_CASE_DATA_API_URL
              value: "http://${SERVICE_NAME}-ccd-data-store-api"
            - name: DOCMOSIS_SERVICE_BASE_URL
              value: "https://docmosis.aat.platform.hmcts.net"
            - name: FACT_API
              value: "http://fact-api-.service.core-compute-.internal"
            - name: FEE_REGISTER_API_URL
              value: "http://fees-register-api-.service.core-compute-.internal"
            - name: HEARING_API_BASEURL
              value: "http://fis-hmc-api-.service.core-compute-.internal"
            - name: IDAM_API_URL
              value: "https://idam-api..platform.hmcts.net"
            - name: IDAM_CLIENT_ID
              value: "prl-cos-api"
            - name: IDAM_CLIENT_REDIRECT_URI
              value: "https://${SERVICE_FQDN}/oauth2/callback"
            - name: IDAM_S2S_AUTH_MICROSERVICE
              value: "prl_cos_api"
            - name: IDAM_S2S_AUTH_URL
              value: "http://rpe-service-auth-provider-.service.core-compute-.internal"
            - name: JUDICIAL_USERS_API
              value: "http://rd-judicial-api-.service.core-compute-.internal"
            - name: LOCATION_REF_API
              value: "http://rd-location-ref-api-.service.core-compute-.internal"
            - name: PAY_CALLBACK_URL
              value: "https://${SERVICE_FQDN}/service-request-update"
            - name: PAY_URL
              value: "http://payment-api-.service.core-compute-.internal"
            - name: PRD_API_BASEURL
              value: "http://rd-professional-api-.service.core-compute-.internal"
            - name: PRL_DGS_API_URL
              value: "http://prl-dgs-.service.core-compute-.internal"
            - name: PRL_S2S_AUTHORISED_SERVICES
              value: "api_gw,prl_citizen_frontend,fis_hmc_api,ccd_data,prl_cos_api"
            - name: RD_PROFESSIONAL_API
              value: "http://rd-professional-api-.service.core-compute-.internal"
            - name: REFDATA_API_URL
              value: "http://rd-commondata-api-.service.core-compute-.internal"
            - name: REFORM_SERVICE_NAME
              value: "prl_cos_api"
            - name: RUNS_LOCALLY
              value: "false"
            - name: SEND_LETTER_URL
              value: "http://rpe-send-letter-service-.service.core-compute-.internal"
            - name: STAFF_DETAILS_API
              value: "http://rd-caseworker-ref-api-.service.core-compute-.internal"
            - name: XUI_URL
              value: "https://manage-case..platform.hmcts.net/cases/case-details"
          volumeMounts:    
          resources:
            requests:
              memory: "1024Mi"
              cpu: "250m"
            limits:
              memory: "2048Mi"
              cpu: "1500m"
          ports:
            - containerPort: 4044
              name: http
          startupProbe:
            httpGet:
              path: /health/liveness
              port: 4044
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 20
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 4044
            initialDelaySeconds: 0
            timeoutSeconds: 3
            periodSeconds: 15
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: 4044
            initialDelaySeconds: 0
            timeoutSeconds: 3
            periodSeconds: 15
          imagePullPolicy: Always
---
# Source: prl-ccd-definitions/charts/xui-webapp/charts/nodejs/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${service_name}-xui-webapp  
  labels:
    app.kubernetes.io/name: ${service_name}-xui-webapp
    helm.sh/chart: nodejs-3.1.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release  
  annotations:
spec:
  revisionHistoryLimit: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ${service_name}-xui-webapp
  template:
    metadata:    
      labels:
        app.kubernetes.io/name: ${service_name}-xui-webapp
        helm.sh/chart: nodejs-3.1.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: test-release
        azure.workload.identity/use: "true"    
      annotations:
    spec:
      serviceAccountName: default    
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.azure.com/mode
                    operator: NotIn
                    values:
                      - system
      securityContext:
        runAsUser: 1000
        fsGroup: 1000        
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.azure.com/agentpool
          whenUnsatisfiable: DoNotSchedule
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ${service_name}-xui-webapp
          matchLabelKeys:
            - pod-template-hash
        - maxSkew: 2
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ${service_name}-xui-webapp
          matchLabelKeys:
            - pod-template-hash
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ${service_name}-xui-webapp
          matchLabelKeys:
            - pod-template-hash    
      dnsConfig:
        options:
          - name: ndots
            value: "3"
      volumes:        
      restartPolicy: "Always"
      terminationGracePeriodSeconds: 30
      containers:
        - image: hmctspublic.azurecr.io/xui/webapp:latest
          name: ${service_name}-xui-webapp
          securityContext:
            allowPrivilegeEscalation: false
          env:    
            - name: ALLOW_CONFIG_MUTATIONS
              value: "1"
            - name: FEATURE_ACCESS_MANAGEMENT_ENABLED
              value: "false"
            - name: FEATURE_APP_INSIGHTS_ENABLED
              value: "true"
            - name: FEATURE_HELMET_ENABLED
              value: "true"
            - name: FEATURE_JRD_E_LINKS_V2_ENABLED
              value: "true"
            - name: FEATURE_OIDC_ENABLED
              value: "false"
            - name: FEATURE_PROXY_ENABLED
              value: "false"
            - name: FEATURE_REDIS_ENABLED
              value: "true"
            - name: FEATURE_SECURE_COOKIE_ENABLED
              value: "true"
            - name: FEATURE_SUBSTANTIVE_ROLE_ENABLED
              value: "true"
            - name: FEATURE_TERMS_AND_CONDITIONS_ENABLED
              value: "false"
            - name: FEATURE_UPDATED_TASK_PERMISSIONS_ENABLED
              value: "false"
            - name: FEATURE_WORKALLOCATION_ENABLED
              value: "false"
            - name: HEALTH_CASE_CASEWORKER_API
              value: "http://rd-caseworker-ref-api-.service.core-compute-.internal/health"
            - name: HEALTH_CCD_ACTIVITY_API
              value: "http://ccd-case-activity-api-.service.core-compute-.internal/health"
            - name: HEALTH_CCD_COMPONENT_API
              value: "http://${SERVICE_NAME}-ccd-api-gw/health"
            - name: HEALTH_CCD_DATA_API
              value: "http://${SERVICE_NAME}-ccd-data-store-api/health"
            - name: HEALTH_DOCUMENTS_API
              value: "http://dm-store-.service.core-compute-.internal/health"
            - name: HEALTH_EM_ANNO_API
              value: "http://em-anno-.service.core-compute-.internal/health"
            - name: HEALTH_EM_DOCASSEMBLY_API
              value: "http://dg-docassembly-.service.core-compute-.internal/health"
            - name: HEALTH_ROLE_ASSIGNMENT_API
              value: "http://am-role-assignment-service-.service.core-compute-.internal/health"
            - name: HEALTH_S2S_SERVICE
              value: "http://rpe-service-auth-provider-.service.core-compute-.internal/health"
            - name: HEALTH_TERMS_AND_CONDITIONS_API
              value: "https://xui-terms-and-conditions-${SERVICE_FQDN}"
            - name: HEALTH_WORK_ALLOCATION_TASK_API
              value: "http://wa-task-management-api-.service.core-compute-.internal/health"
            - name: JURISDICTIONS
              value: "PRIVATELAW"
            - name: LOGGING
              value: "debug"
            - name: MAX_LOG_LINE
              value: "80"
            - name: MC_HTTP_PROXY
              value: "http://172.16.0.7:8080"
            - name: MC_NO_PROXY
              value: "localhost"
            - name: MICROSERVICE
              value: "xui_webapp"
            - name: NODE_CONFIG_ENV
              value: "production"
            - name: NODE_ENV
              value: "production"
            - name: NODE_OPTIONS
              value: "--max-old-space-size=8192"
            - name: NODE_TLS_REJECT_UNAUTHORIZED
              value: "0"
            - name: NOW
              value: "false"
            - name: PROTOCOL
              value: "https"
            - name: REDIS_KEY_PREFIX
              value: "activity:"
            - name: REDIS_TTL
              value: "6000"
            - name: REFORM_SERVICE_NAME
              value: "xui-webapp"
            - name: REFORM_TEAM
              value: "rpx"
            - name: SERVICES_CASE_CASEWORKER_API
              value: "http://rd-caseworker-ref-api-.service.core-compute-.internal"
            - name: SERVICES_CASE_JUDICALWORKER_API
              value: "http://rd-judicial-ref-api-.service.core-compute-.internal"
            - name: SERVICES_CASE_JUDICIAL_API
              value: "http://rd-judicial-api-.service.core-compute-.internal"
            - name: SERVICES_CCD_ACTIVITY_API
              value: "http://ccd-case-activity-api-.service.core-compute-.internal"
            - name: SERVICES_CCD_CASE_ASSIGNMENT_API
              value: "http://${SERVICE_NAME}-aac-manage-case-assignment"
            - name: SERVICES_CCD_COMPONENT_API
              value: "http://${SERVICE_NAME}-ccd-api-gw"
            - name: SERVICES_CCD_DATA_STORE_API
              value: "https://ccd-data-store-api-prl-ccd-definitions-pr-2671.preview.platform.hmcts.net"
            - name: SERVICES_DOCUMENTS_API
              value: "http://dm-store-.service.core-compute-.internal"
            - name: SERVICES_DOCUMENTS_API_V2
              value: "http://${SERVICE_NAME}-cdam"
            - name: SERVICES_EM_ANNO_API
              value: "http://em-anno-.service.core-compute-.internal"
            - name: SERVICES_EM_DOCASSEMBLY_API
              value: "http://dg-docassembly-.service.core-compute-.internal"
            - name: SERVICES_EM_HRS_API
              value: "http://em-hrs-api-.service.core-compute-.internal"
            - name: SERVICES_HEARINGS_COMPONENT_API_CIVIL
              value: "http://civil-service-.service.core-compute-.internal"
            - name: SERVICES_HEARINGS_COMPONENT_API_IAC
              value: "http://ia-hearings-api-.service.core-compute-.internal"
            - name: SERVICES_HEARINGS_COMPONENT_API_PRIVATELAW
              value: "http://fis-hmc-api-.service.core-compute-.internal"
            - name: SERVICES_HEARINGS_COMPONENT_API_SSCS
              value: "http://sscs-hearings-api-.service.core-compute-.internal"
            - name: SERVICES_HMC_HEARINGS_COMPONENT_API
              value: "http://hmc-cft-hearing-service-.service.core-compute-.internal"
            - name: SERVICES_ICP_API
              value: "http://em-icp-.service.core-compute-.internal"
            - name: SERVICES_IDAM_API_URL
              value: "https://idam-api.aat.platform.hmcts.net"
            - name: SERVICES_IDAM_CLIENT_ID
              value: "xuiwebapp"
            - name: SERVICES_IDAM_INDEX_URL
              value: "/"
            - name: SERVICES_IDAM_ISS_URL
              value: "https://forgerock-am.service.core-compute-idam-2.internal:8443/openam/oauth2/hmcts"
            - name: SERVICES_IDAM_LOGIN_URL
              value: "https://idam-web-public.aat.platform.hmcts.net"
            - name: SERVICES_IDAM_OAUTH_CALLBACK_URL
              value: "/oauth2/callback"
            - name: SERVICES_JUDICIAL_BOOKING_API_PATH
              value: "http://am-judicial-booking-service-.service.core-compute-.internal"
            - name: SERVICES_LOCATION_API
              value: "http://rd-location-ref-api-.service.core-compute-.internal"
            - name: SERVICES_LOCATION_REF_API_URL
              value: "http://rd-location-ref-api-.service.core-compute-.internal"
            - name: SERVICES_MARKUP_API
              value: "http://em-npa-.service.core-compute-.internal"
            - name: SERVICES_NOTIFICATIONS_API_URL
              value: "http://ccpay-notifications-service-.service.core-compute-.internal"
            - name: SERVICES_PAYMENTS_URL
              value: "http://payment-api-.service.core-compute-.internal"
            - name: SERVICES_PAYMENT_RETURN_URL
              value: "https://paymentoutcome-web..platform.hmcts.net"
            - name: SERVICES_PRD_API
              value: "http://rd-professional-api-.service.core-compute-.internal"
            - name: SERVICES_PRD_COMMONDATA_API
              value: "http://rd-commondata-api-.service.core-compute-.internal"
            - name: SERVICES_PRD_JUDICIAL_API
              value: "http://rd-judicial-api-.service.core-compute-.internal"
            - name: SERVICES_PRD_LOCATION_API
              value: "http://rd-location-ref-api-.service.core-compute-.internal"
            - name: SERVICES_REFUNDS_API_URL
              value: "http://ccpay-refunds-api-.service.core-compute-.internal"
            - name: SERVICES_ROLE_ASSIGNMENT_API
              value: "http://am-role-assignment-service-.service.core-compute-.internal"
            - name: SERVICES_ROLE_ASSIGNMENT_MAPPING_API
              value: "http://am-org-role-mapping-service-.service.core-compute-.internal"
            - name: SERVICES_S2S
              value: "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
            - name: SERVICES_TERMS_AND_CONDITIONS
              value: "https://xui-terms-and-conditions-${SERVICE_FQDN}"
            - name: SERVICES_TRANSLATION_API_URL
              value: "http://ts-translation-service-.service.core-compute-.internal"
            - name: SERVICES_WA_WORKFLOW_API_URL
              value: "http://wa-workflow-api-.service.core-compute-.internal"
            - name: SERVICES_WORK_ALLOCATION_TASK_API
              value: "http://wa-task-management-api-.service.core-compute-.internal"
            - name: SESSION_SECRET
              value: "secretSauce"
            - name: STUB
              value: "false"
            - name: UV_THREADPOOL_SIZE
              value: "64"
            - name: WA_SUPPORTED_JURISDICTIONS
              value: "IA,CIVIL"
            - name: XUI_ENV
              value: "preview"
          volumeMounts:    
          resources:
            requests:
              memory: "2Gi"
              cpu: "2000m"
            limits:
              memory: "4Gi"
              cpu: "4000m"
          ports:
            - containerPort: 3000
              name: http
          startupProbe:
            httpGet:
              path: /health/liveness
              port: 3000
            initialDelaySeconds: 5
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 15
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 3000
            initialDelaySeconds: 0
            timeoutSeconds: 3
            periodSeconds: 15
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: 3000
            initialDelaySeconds: 0
            timeoutSeconds: 3
            periodSeconds: 15
          imagePullPolicy: Always
---
# Source: prl-ccd-definitions/charts/ccd-case-document-am-api/charts/java/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ${service_name}-cdam  
  labels:
    app.kubernetes.io/name: ${service_name}-cdam
    helm.sh/chart: java-5.2.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release  
  annotations:
spec:
  maxReplicas: 3
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ${service_name}-cdam
  metrics:
  
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-admin-web/charts/nodejs/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: test-release-ccd-admin-web  
  labels:
    app.kubernetes.io/name: test-release-ccd-admin-web
    helm.sh/chart: nodejs-2.4.14
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd  
  annotations:
spec:
  maxReplicas: 4
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: test-release-ccd-admin-web
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-api-gateway-web/charts/nodejs/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: test-release-ccd-api-gw  
  labels:
    app.kubernetes.io/name: test-release-ccd-api-gw
    helm.sh/chart: nodejs-2.4.14
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd  
  annotations:
spec:
  maxReplicas: 20
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: test-release-ccd-api-gw
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-data-store-api/charts/java/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: test-release-ccd-data-store-api  
  labels:
    app.kubernetes.io/name: test-release-ccd-data-store-api
    helm.sh/chart: java-4.0.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd  
  annotations:
spec:
  maxReplicas: 9
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: test-release-ccd-data-store-api
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-definition-store-api/charts/java/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: test-release-ccd-definition-store  
  labels:
    app.kubernetes.io/name: test-release-ccd-definition-store
    helm.sh/chart: java-4.0.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd  
  annotations:
spec:
  maxReplicas: 4
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: test-release-ccd-definition-store
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-user-profile-api/charts/java/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: test-release-ccd-user-profile-api  
  labels:
    app.kubernetes.io/name: test-release-ccd-user-profile-api
    helm.sh/chart: java-4.0.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd  
  annotations:
spec:
  maxReplicas: 8
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: test-release-ccd-user-profile-api
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
# Source: prl-ccd-definitions/charts/prl-cos/charts/java/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: test-release-java  
  labels:
    app.kubernetes.io/name: test-release-java
    helm.sh/chart: java-5.2.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release  
  annotations:
spec:
  maxReplicas: 2
  minReplicas: 2
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: test-release-java
  metrics:
  
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
# Source: prl-ccd-definitions/charts/ccd/charts/elasticsearch/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ${SERVICE_NAME}-es-master
  labels:
    heritage: "Helm"
    release: "test-release"
    chart: "elasticsearch"
    app: "${SERVICE_NAME}-es-master"
  annotations:
    esMajorVersion: "7"
spec:
  serviceName: ${SERVICE_NAME}-es-master-headless
  selector:
    matchLabels:
      app: "${SERVICE_NAME}-es-master"
  replicas: 1
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      name: "${SERVICE_NAME}-es-master"
      labels:
        release: "test-release"
        chart: "elasticsearch"
        app: "${SERVICE_NAME}-es-master"
      annotations:
        
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - "${SERVICE_NAME}-es-master"
      terminationGracePeriodSeconds: 120
      volumes:
      enableServiceLinks: true
      initContainers:
      - name: configure-sysctl
        securityContext:
          runAsUser: 0
          privileged: true
        image: "docker.elastic.co/elasticsearch/elasticsearch:7.17.1"
        imagePullPolicy: "IfNotPresent"
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        resources:
          limits:
            cpu: 1000m
            memory: 1024Mi
          requests:
            cpu: 50m
            memory: 512Mi

      containers:
      - name: "${SERVICE_NAME}-es"
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        image: "docker.elastic.co/elasticsearch/elasticsearch:7.17.1"
        imagePullPolicy: "IfNotPresent"
        readinessProbe:
          exec:
            command:
              - bash
              - -c
              - |
                set -e
                # If the node is starting up wait for the cluster to be ready (request params: "wait_for_status=green&timeout=1s" )
                # Once it has started only check that the node itself is responding
                START_FILE=/tmp/.es_start_file

                # Disable nss cache to avoid filling dentry cache when calling curl
                # This is required with Elasticsearch Docker using nss < 3.52
                export NSS_SDB_USE_CACHE=no

                http () {
                  local path="${1}"
                  local args="${2}"
                  set -- -XGET -s

                  if [ "$args" != "" ]; then
                    set -- "$@" $args
                  fi

                  if [ -n "${ELASTIC_PASSWORD}" ]; then
                    set -- "$@" -u "elastic:${ELASTIC_PASSWORD}"
                  fi

                  curl --output /dev/null -k "$@" "http://127.0.0.1:9200${path}"
                }

                if [ -f "${START_FILE}" ]; then
                  echo 'Elasticsearch is already running, lets check the node is healthy'
                  HTTP_CODE=$(http "/" "-w %{http_code}")
                  RC=$?
                  if [[ ${RC} -ne 0 ]]; then
                    echo "curl --output /dev/null -k -XGET -s -w '%{http_code}' \${BASIC_AUTH} http://127.0.0.1:9200/ failed with RC ${RC}"
                    exit ${RC}
                  fi
                  # ready if HTTP code 200, 503 is tolerable if ES version is 6.x
                  if [[ ${HTTP_CODE} == "200" ]]; then
                    exit 0
                  elif [[ ${HTTP_CODE} == "503" && "7" == "6" ]]; then
                    exit 0
                  else
                    echo "curl --output /dev/null -k -XGET -s -w '%{http_code}' \${BASIC_AUTH} http://127.0.0.1:9200/ failed with HTTP code ${HTTP_CODE}"
                    exit 1
                  fi

                else
                  echo 'Waiting for elasticsearch cluster to become ready (request params: "wait_for_status=green&timeout=1s" )'
                  if http "/_cluster/health?wait_for_status=green&timeout=1s" "--fail" ; then
                    touch ${START_FILE}
                    exit 0
                  else
                    echo 'Cluster is not yet ready (request params: "wait_for_status=green&timeout=1s" )'
                    exit 1
                  fi
                fi
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
        ports:
        - name: http
          containerPort: 9200
        - name: transport
          containerPort: 9300
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 1000m
            memory: 2Gi
        env:
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: cluster.initial_master_nodes
            value: "${SERVICE_NAME}-es-master-0,"
          - name: discovery.seed_hosts
            value: "${SERVICE_NAME}-es-master-headless"
          - name: cluster.name
            value: "es"
          - name: network.host
            value: "0.0.0.0"
          - name: cluster.deprecation_indexing.enabled
            value: "false"
          - name: ES_JAVA_OPTS
            value: "-Xmx512m -Xms512m"
          - name: node.data
            value: "true"
          - name: node.ingest
            value: "true"
          - name: node.master
            value: "true"
          - name: node.ml
            value: "true"
          - name: node.remote_cluster_client
            value: "true"
          - name: discovery.type
            value: single-node
          - name: cluster.initial_master_nodes
            value: ""
          - name: action.auto_create_index
            value: .security*,.watches,.triggered_watches,.watcher-history-*,.logstash_dead_letter,.ml*
        volumeMounts:
---
# Source: prl-ccd-definitions/charts/ccd/charts/logstash/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: test-release-logstash
  labels:
    app: "test-release-logstash"
    chart: "logstash"
    heritage: "Helm"
    release: "test-release"
spec:
  serviceName: test-release-logstash-headless
  selector:
    matchLabels:
      app: "test-release-logstash"
      release: "test-release"
  replicas: 1
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      name: "test-release-logstash"
      labels:
        app: "test-release-logstash"
        chart: "logstash"
        heritage: "Helm"
        release: "test-release"
      annotations:
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - "test-release-logstash"
            topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 120
      volumes:
      containers:
      - name: "logstash"
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        image: "hmctspublic.azurecr.io/ccd/logstash:latest"
        imagePullPolicy: "IfNotPresent"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 90
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
        ports:
        - name: http
          containerPort: 9600
        resources:
          limits:
            cpu: 1000m
            memory: 1536Mi
          requests:
            cpu: 1000m
            memory: 1024Mi
        env:
          - name: LS_JAVA_OPTS
            value: "-Xmx1g -Xms512M"
          - name: DATA_STORE_URL
            value: jdbc:postgresql://${SERVICE_NAME}-postgresql:5432/data-store?ssl=disable&stringtype=unspecified
          - name: DATA_STORE_USER
            value: hmcts
          - name: DATA_STORE_PASS
            value: hmcts
          - name: DB_URL
            value: jdbc:postgresql://${SERVICE_NAME}-postgresql:5432/data-store?ssl=disable&stringtype=unspecified
          - name: DB_USER
            value: hmcts
          - name: DB_PWD
            value: hmcts
          - name: ES_HOSTS
            value: http://${SERVICE_NAME}-es-master:9200
          - name: ES_DATA_NODES_URL
            value: http://${SERVICE_NAME}-es-master:9200
          - name: ELASTIC_SEARCH_DATA_NODES_HOSTS
            value: http://${SERVICE_NAME}-es-master:9200
          - name: ES_URL
            value: http://${SERVICE_NAME}-es-master:9200
        volumeMounts:
---
# Source: prl-ccd-definitions/charts/ccd/charts/postgresql/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: test-release-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-11.6.10
    app.kubernetes.io/instance: test-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  replicas: 1
  serviceName: test-release-postgresql-hl
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: test-release
      app.kubernetes.io/component: primary
  template:
    metadata:
      name: test-release-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-11.6.10
        app.kubernetes.io/instance: test-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
      annotations:
    spec:
      serviceAccountName: default
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/instance: test-release
                    app.kubernetes.io/component: primary
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      hostNetwork: false
      hostIPC: false
      initContainers:
      containers:
        - name: postgresql
          image: docker.io/bitnami/postgresql:11.16.0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: PGDATA
              value: "/bitnami/postgresql/data"
            # Authentication
            - name: POSTGRES_USER
              value: "hmcts"
            - name: POSTGRES_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: test-release-postgresql
                  key: postgres-password
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: test-release-postgresql
                  key: password
            - name: POSTGRES_DB
              value: "ccd"
            # Replication
            # Initdb
            # Standby
            # LDAP
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            # TLS
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            # Audit
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            # Others
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: "error"
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: "pgaudit"
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "hmcts" -d "dbname=ccd" -h 127.0.0.1 -p 5432
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                
                - |
                  exec pg_isready -U "hmcts" -d "dbname=ccd" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
          resources:
            limits: {}
            requests:
              cpu: 25m
              memory: 256Mi
          volumeMounts:
            - name: custom-init-scripts
              mountPath: /docker-entrypoint-initdb.d/
            - name: dshm
              mountPath: /dev/shm
      volumes:
        - name: custom-init-scripts
          configMap:
            name: test-release-postgresql-init-scripts
        - name: dshm
          emptyDir:
            medium: Memory
        - name: data
          emptyDir: {}
---
# Source: prl-ccd-definitions/charts/aac-manage-case-assignment/charts/java/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${service_name}-aac-manage-case-assignment  
  labels:
    app.kubernetes.io/name: ${service_name}-aac-manage-case-assignment
    helm.sh/chart: java-5.2.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
  annotations:
spec:
  ingressClassName: traefik
  rules:
  - host: aac-manage-case-assignment-.service.core-compute-.internal
    http:
      paths:    
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ${service_name}-aac-manage-case-assignment
            port:
              number: 80
---
# Source: prl-ccd-definitions/charts/ccd-case-document-am-api/charts/java/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${service_name}-cdam  
  labels:
    app.kubernetes.io/name: ${service_name}-cdam
    helm.sh/chart: java-5.2.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
  annotations:
spec:
  ingressClassName: traefik
  rules:
  - host: ccd-case-document-am-api-${service_fqdn}
    http:
      paths:    
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ${service_name}-cdam
            port:
              number: 80
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-admin-web/charts/nodejs/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-release-ccd-admin-web  
  labels:
    app.kubernetes.io/name: test-release-ccd-admin-web
    helm.sh/chart: nodejs-2.4.14
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd
  annotations:
spec:
  ingressClassName: traefik
  rules:
  - host: admin-web-${service_fqdn}
    http:
      paths:    
      - path: /
        pathType: Prefix
        backend:
          service:
            name: test-release-ccd-admin-web
            port:
              number: 80
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-api-gateway-web/charts/nodejs/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-release-ccd-api-gw  
  labels:
    app.kubernetes.io/name: test-release-ccd-api-gw
    helm.sh/chart: nodejs-2.4.14
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd
  annotations:
spec:
  ingressClassName: traefik
  rules:
  - host: gateway-${service_fqdn}
    http:
      paths:    
      - path: /
        pathType: Prefix
        backend:
          service:
            name: test-release-ccd-api-gw
            port:
              number: 80
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-data-store-api/charts/java/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-release-ccd-data-store-api  
  labels:
    app.kubernetes.io/name: test-release-ccd-data-store-api
    helm.sh/chart: java-4.0.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd
  annotations:
spec:
  ingressClassName: traefik
  rules:
  - host: ccd-data-store-api-${service_fqdn}
    http:
      paths:    
      - path: /
        pathType: Prefix
        backend:
          service:
            name: test-release-ccd-data-store-api
            port:
              number: 80
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-definition-store-api/charts/java/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-release-ccd-definition-store  
  labels:
    app.kubernetes.io/name: test-release-ccd-definition-store
    helm.sh/chart: java-4.0.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd
  annotations:
spec:
  ingressClassName: traefik
  rules:
  - host: ccd-definition-store-${service_fqdn}
    http:
      paths:    
      - path: /
        pathType: Prefix
        backend:
          service:
            name: test-release-ccd-definition-store
            port:
              number: 80
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-user-profile-api/charts/java/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-release-ccd-user-profile-api  
  labels:
    app.kubernetes.io/name: test-release-ccd-user-profile-api
    helm.sh/chart: java-4.0.13
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
    aadpodidbinding: ccd
  annotations:
spec:
  ingressClassName: traefik
  rules:
  - host: ccd-user-profile-api-${service_fqdn}
    http:
      paths:    
      - path: /
        pathType: Prefix
        backend:
          service:
            name: test-release-ccd-user-profile-api
            port:
              number: 80
---
# Source: prl-ccd-definitions/charts/ccd/charts/elasticsearch/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${SERVICE_NAME}-es-master
  labels:
    app: elasticsearch
    release: test-release
    heritage: Helm
spec:
  ingressClassName: "traefik"
  rules:
  - host: es-${SERVICE_FQDN}
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: ${SERVICE_NAME}-es-master
            port:
              number: 9200
---
# Source: prl-ccd-definitions/charts/prl-cos/charts/java/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-release-java  
  labels:
    app.kubernetes.io/name: test-release-java
    helm.sh/chart: java-5.2.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
  annotations:
spec:
  ingressClassName: traefik
  rules:
  - host: ${service_fqdn}
    http:
      paths:    
      - path: /
        pathType: Prefix
        backend:
          service:
            name: test-release-java
            port:
              number: 80
---
# Source: prl-ccd-definitions/charts/xui-webapp/charts/nodejs/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${service_name}-xui-webapp  
  labels:
    app.kubernetes.io/name: ${service_name}-xui-webapp
    helm.sh/chart: nodejs-3.1.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release
  annotations:
spec:
  ingressClassName: traefik
  rules:
  - host: xui-${service_fqdn}
    http:
      paths:    
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ${service_name}-xui-webapp
            port:
              number: 80
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-admin-web/charts/idam-pr/templates/bin-configmap-delete.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-release-ccd-admin-web-idam-pr-bin-delete
  labels:
    type: configuration
    app.kubernetes.io/name: test-release-ccd-admin-web-idam-pr-bin-delete
    helm.sh/chart: "idam-pr-2.2.6"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "test-release"
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: "before-hook-creation"
data:
  idam-pr-delete: |
    #!/usr/bin/env sh
    set -ex
    
    for redirect_uri in https://admin-web-${SERVICE_FQDN}/oauth2redirect
    do
    echo "Removing redirect URI for service CCD Admin: ${redirect_uri} using https://idam-api.aat.platform.hmcts.net"
    
    curl -v -k -X PATCH \
      https://idam-api.aat.platform.hmcts.net/testing-support/services/CCD%20Admin \
      -H 'Accept: application/json' \
      -H 'Content-Type: application/json' \
      -d '[ {
    	"operation": "remove",
    	"field": "redirect_uri",
    	"value": "'${redirect_uri}'"
    }
    ]'
    done
---
# Source: prl-ccd-definitions/charts/idam-pr/templates/bin-configmap-delete.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ${SERVICE_NAME}-idam-pr-bin-delete
  labels:
    type: configuration
    app.kubernetes.io/name: ${SERVICE_NAME}-idam-pr-bin-delete
    helm.sh/chart: "idam-pr-2.3.0"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "test-release"
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: "before-hook-creation"
data:
  idam-pr-delete: |
    #!/usr/bin/env sh
    set -ex
    
    for redirect_uri in https://case-management-web-${SERVICE_FQDN}/oauth2redirect
    do
    echo "Removing redirect URI for service CCD: ${redirect_uri} using https://idam-api.aat.platform.hmcts.net"
    
    curl -v -k -X PATCH \
      https://idam-api.aat.platform.hmcts.net/testing-support/services/CCD \
      -H 'Accept: application/json' \
      -H 'Content-Type: application/json' \
      -d '[ {
    	"operation": "remove",
    	"field": "redirect_uri",
    	"value": "'${redirect_uri}'"
    }
    ]'
    done
    
    for redirect_uri in https://admin-web-${SERVICE_FQDN}/oauth2redirect
    do
    echo "Removing redirect URI for service CCD Admin: ${redirect_uri} using https://idam-api.aat.platform.hmcts.net"
    
    curl -v -k -X PATCH \
      https://idam-api.aat.platform.hmcts.net/testing-support/services/CCD%20Admin \
      -H 'Accept: application/json' \
      -H 'Content-Type: application/json' \
      -d '[ {
    	"operation": "remove",
    	"field": "redirect_uri",
    	"value": "'${redirect_uri}'"
    }
    ]'
    done
    
    for redirect_uri in https://xui-${SERVICE_FQDN}/oauth2/callback
    do
    echo "Removing redirect URI for service XUI: ${redirect_uri} using https://idam-api.aat.platform.hmcts.net"
    
    curl -v -k -X PATCH \
      https://idam-api.aat.platform.hmcts.net/testing-support/services/XUI \
      -H 'Accept: application/json' \
      -H 'Content-Type: application/json' \
      -d '[ {
    	"operation": "remove",
    	"field": "redirect_uri",
    	"value": "'${redirect_uri}'"
    }
    ]'
    done
---
# Source: prl-ccd-definitions/charts/aac-manage-case-assignment/charts/java/templates/tests/test-service.yaml
apiVersion: v1
kind: Pod
metadata:
  name: ${service_name}-aac-manage-case-assignment-test
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
  - name: ${service_name}-aac-manage-case-assignment-test
    image: busybox
    env:
      - name: SERVICE_NAME
        value: ${service_name}-aac-manage-case-assignment
    command: ["sh", "-c", "httpstatuscode=$(wget -S http://$SERVICE_NAME/health 2>&1 | grep HTTP/ | awk 'END{print $2}') && [ \"$httpstatuscode\" = \"200\" ]"]
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
  restartPolicy: Never
---
# Source: prl-ccd-definitions/charts/ccd-case-document-am-api/charts/java/templates/tests/test-service.yaml
apiVersion: v1
kind: Pod
metadata:
  name: ${service_name}-cdam-test
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
  - name: ${service_name}-cdam-test
    image: busybox
    env:
      - name: SERVICE_NAME
        value: ${service_name}-cdam
    command: ["sh", "-c", "httpstatuscode=$(wget -S http://$SERVICE_NAME/health 2>&1 | grep HTTP/ | awk 'END{print $2}') && [ \"$httpstatuscode\" = \"200\" ]"]
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
  restartPolicy: Never
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-admin-web/charts/idam-pr/templates/tests/test-service.yaml
apiVersion: v1
kind: Pod
metadata:
  name: test-release-ccd-admin-web-idam-pr-bin-test-service
  annotations:
    helm.sh/hook: test-success
spec:
  volumes:
    - name: container-init
      configMap:
        name: test-release-ccd-admin-web-idam-pr-bin-test
        defaultMode: 0755
  containers:
  - name: test-release-ccd-admin-web-idam-pr-bin-test
    image: hmcts/curl
    volumeMounts:
      - name: container-init
        mountPath: /container.init
    command: [ "/bin/sh" ]
    args:
      - /container.init/idam-pr-test
  restartPolicy: Never
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-admin-web/charts/nodejs/templates/tests/test-service.yaml
apiVersion: v1
kind: Pod
metadata:
  name: test-release-ccd-admin-web-test
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
  - name: test-release-ccd-admin-web-test
    image: busybox
    env:
      - name: SERVICE_NAME
        value: test-release-ccd-admin-web
    command: ["sh", "-c", "httpstatuscode=$(wget -S http://$SERVICE_NAME/health 2>&1 | grep HTTP/ | awk 'END{print $2}') && [ \"$httpstatuscode\" = \"200\" ]"]
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
  restartPolicy: Never
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-api-gateway-web/charts/nodejs/templates/tests/test-service.yaml
apiVersion: v1
kind: Pod
metadata:
  name: test-release-ccd-api-gw-test
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
  - name: test-release-ccd-api-gw-test
    image: busybox
    env:
      - name: SERVICE_NAME
        value: test-release-ccd-api-gw
    command: ["sh", "-c", "httpstatuscode=$(wget -S http://$SERVICE_NAME/health 2>&1 | grep HTTP/ | awk 'END{print $2}') && [ \"$httpstatuscode\" = \"200\" ]"]
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
  restartPolicy: Never
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-data-store-api/charts/java/templates/tests/test-service.yaml
apiVersion: v1
kind: Pod
metadata:
  name: test-release-ccd-data-store-api-test
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
  - name: test-release-ccd-data-store-api-test
    image: busybox
    env:
      - name: SERVICE_NAME
        value: test-release-ccd-data-store-api
    command: ["sh", "-c", "httpstatuscode=$(wget -S http://$SERVICE_NAME/health 2>&1 | grep HTTP/ | awk 'END{print $2}') && [ \"$httpstatuscode\" = \"200\" ]"]
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
  restartPolicy: Never
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-definition-store-api/charts/java/templates/tests/test-service.yaml
apiVersion: v1
kind: Pod
metadata:
  name: test-release-ccd-definition-store-test
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
  - name: test-release-ccd-definition-store-test
    image: busybox
    env:
      - name: SERVICE_NAME
        value: test-release-ccd-definition-store
    command: ["sh", "-c", "httpstatuscode=$(wget -S http://$SERVICE_NAME/health 2>&1 | grep HTTP/ | awk 'END{print $2}') && [ \"$httpstatuscode\" = \"200\" ]"]
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
  restartPolicy: Never
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-user-profile-api/charts/java/templates/tests/test-service.yaml
apiVersion: v1
kind: Pod
metadata:
  name: test-release-ccd-user-profile-api-test
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
  - name: test-release-ccd-user-profile-api-test
    image: busybox
    env:
      - name: SERVICE_NAME
        value: test-release-ccd-user-profile-api
    command: ["sh", "-c", "httpstatuscode=$(wget -S http://$SERVICE_NAME/health 2>&1 | grep HTTP/ | awk 'END{print $2}') && [ \"$httpstatuscode\" = \"200\" ]"]
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
  restartPolicy: Never
---
# Source: prl-ccd-definitions/charts/idam-pr/templates/tests/test-service.yaml
apiVersion: v1
kind: Pod
metadata:
  name: ${SERVICE_NAME}-idam-pr-bin-test-service
  annotations:
    helm.sh/hook: test-success
spec:
  volumes:
    - name: container-init
      configMap:
        name: ${SERVICE_NAME}-idam-pr-bin-test
        defaultMode: 0755
    - name: data-dir
      emptyDir: { }
  containers:
  - name: ${SERVICE_NAME}-idam-pr-bin-test
    image: hmctspublic.azurecr.io/imported/curlimages/curl:7.85.0
    volumeMounts:
      - name: container-init
        mountPath: /container.init
      - name: data-dir
        mountPath: /data/dir
    command: [ "/bin/sh" ]
    args:
      - /container.init/idam-pr-test
  restartPolicy: Never
---
# Source: prl-ccd-definitions/charts/prl-cos/charts/java/templates/tests/test-service.yaml
apiVersion: v1
kind: Pod
metadata:
  name: test-release-java-test
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
  - name: test-release-java-test
    image: busybox
    env:
      - name: SERVICE_NAME
        value: test-release-java
    command: ["sh", "-c", "httpstatuscode=$(wget -S http://$SERVICE_NAME/health 2>&1 | grep HTTP/ | awk 'END{print $2}') && [ \"$httpstatuscode\" = \"200\" ]"]
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
  restartPolicy: Never
---
# Source: prl-ccd-definitions/charts/xui-webapp/charts/nodejs/templates/tests/test-service.yaml
apiVersion: v1
kind: Pod
metadata:
  name: ${service_name}-xui-webapp-test
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
  - name: ${service_name}-xui-webapp-test
    image: busybox
    env:
      - name: SERVICE_NAME
        value: ${service_name}-xui-webapp
    command: ["sh", "-c", "httpstatuscode=$(wget -S http://$SERVICE_NAME/health 2>&1 | grep HTTP/ | awk 'END{print $2}') && [ \"$httpstatuscode\" = \"200\" ]"]
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
  restartPolicy: Never
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-admin-web/charts/idam-pr/templates/add-redirect-uri.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: test-release-ccd-admin-web-idam-pr-add
  labels:
    app.kubernetes.io/name: test-release-ccd-admin-web-idam-pr-add
    helm.sh/chart: "idam-pr-2.2.6"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "test-release"
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: "hook-succeeded"
spec:
  ttlSecondsAfterFinished: 3600
  template:
    metadata:
      name: test-release-ccd-admin-web-idam-pr-add
      labels:
        app.kubernetes.io/name: test-release-ccd-admin-web-idam-pr-add
    spec:
      volumes:
        - name: container-init
          configMap:
            name: test-release-ccd-admin-web-idam-pr-bin-add
            defaultMode: 0755
      containers:
        - name: test-release-ccd-admin-web-idam-pr-add
          image: hmcts/curl
          volumeMounts:
            - name: container-init
              mountPath: /container.init
          command: [ "/bin/sh" ]
          args:
            - /container.init/idam-pr-add
          resources:
            requests:
              memory: 128Mi
              cpu: 25m
            limits:
              memory: 1024Mi
              cpu: 2500m
      restartPolicy: Never
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-admin-web/charts/idam-pr/templates/delete-redirect-uri.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: test-release-ccd-admin-web-idam-pr-del
  labels:
    app.kubernetes.io/name: test-release-ccd-admin-web-idam-pr-del
    helm.sh/chart: "idam-pr-2.2.6"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "test-release"
  annotations:
    helm.sh/hook: post-delete
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: "hook-succeeded"
spec:
  ttlSecondsAfterFinished: 3600
  template:
    metadata:
      name: test-release-ccd-admin-web-idam-pr-del
      labels:
        app.kubernetes.io/name: test-release-ccd-admin-web-idam-pr-del
    spec:
      volumes:
        - name: container-init
          configMap:
            name: test-release-ccd-admin-web-idam-pr-bin-delete
            defaultMode: 0755
      containers:
        - name: test-release-ccd-admin-web-idam-pr-del
          image: hmcts/curl
          volumeMounts:
            - name: container-init
              mountPath: /container.init
          command: [ "/bin/sh" ]
          args:
            - /container.init/idam-pr-delete
          resources:
            requests:
              memory: 128Mi
              cpu: 25m
            limits:
              memory: 1024Mi
              cpu: 2500m
      restartPolicy: Never
---
# Source: prl-ccd-definitions/charts/ccd/charts/ccd-user-profile-importer/templates/user-profile-importer.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: test-release-user-profile-importer
  labels:    
    app.kubernetes.io/name: test-release-user-profile-importer
    helm.sh/chart: ccd-user-profile-importer-1.2.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test-release-user-profile-importer
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "5"
    helm.sh/hook-delete-policy: "hook-succeeded"
spec:
  template:
    metadata:
      name: test-release-user-profile-importer
      labels:        
        app.kubernetes.io/name: test-release-user-profile-importer
        helm.sh/chart: ccd-user-profile-importer-1.2.2
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: test-release-user-profile-importer
    spec:
      restartPolicy: Never
      containers:
        - name: test-release-user-profile-importer
          image: hmctspublic.azurecr.io/ccd/user-profile-importer:latest 
          imagePullPolicy: IfNotPresent
          env:
          - name: CCD_USER_PROFILE_URL
            value: http://test-release-ccd-user-profile-api
          - name: AUTH_PROVIDER_BASE_URL
            value: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
          - name: MICROSERVICE
            value: ccd_definition
          - name: CCD_USERS
            value: ""
          - name: WAIT_HOSTS
            value: ""
          - name: WAIT_HOSTS_TIMEOUT
            value: "300"
          - name: VERBOSE
            value: 
          resources:
            requests:
              memory: 512Mi
              cpu: 250m
            limits:
              memory: 2048Mi
              cpu: 1500m
---
# Source: prl-ccd-definitions/charts/idam-pr/templates/add-redirect-uri.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: ${SERVICE_NAME}-idam-pr-add
  labels:
    app.kubernetes.io/name: ${SERVICE_NAME}-idam-pr-add
    helm.sh/chart: "idam-pr-2.3.0"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "test-release"
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: "hook-succeeded"
spec:
  ttlSecondsAfterFinished: 3600
  template:
    metadata:
      name: ${SERVICE_NAME}-idam-pr-add
      labels:
        app.kubernetes.io/name: ${SERVICE_NAME}-idam-pr-add
    spec:
      volumes:
        - name: container-init
          configMap:
            name: ${SERVICE_NAME}-idam-pr-bin-add
            defaultMode: 0755
      containers:
        - name: ${SERVICE_NAME}-idam-pr-add
          image: hmctspublic.azurecr.io/imported/curlimages/curl:7.85.0
          volumeMounts:
            - name: container-init
              mountPath: /container.init
          command: [ "/bin/sh" ]
          args:
            - /container.init/idam-pr-add
          resources:
            requests:
              memory: 128Mi
              cpu: 25m
            limits:
              memory: 1024Mi
              cpu: 2500m
      restartPolicy: Never
---
# Source: prl-ccd-definitions/charts/idam-pr/templates/delete-redirect-uri.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: ${SERVICE_NAME}-idam-pr-del
  labels:
    app.kubernetes.io/name: ${SERVICE_NAME}-idam-pr-del
    helm.sh/chart: "idam-pr-2.3.0"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "test-release"
  annotations:
    helm.sh/hook: post-delete
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: "hook-succeeded"
spec:
  ttlSecondsAfterFinished: 3600
  template:
    metadata:
      name: ${SERVICE_NAME}-idam-pr-del
      labels:
        app.kubernetes.io/name: ${SERVICE_NAME}-idam-pr-del
    spec:
      volumes:
        - name: container-init
          configMap:
            name: ${SERVICE_NAME}-idam-pr-bin-delete
            defaultMode: 0755
      containers:
        - name: ${SERVICE_NAME}-idam-pr-del
          image: hmctspublic.azurecr.io/imported/curlimages/curl:7.85.0
          volumeMounts:
            - name: container-init
              mountPath: /container.init
          command: [ "/bin/sh" ]
          args:
            - /container.init/idam-pr-delete
          resources:
            requests:
              memory: 128Mi
              cpu: 25m
            limits:
              memory: 1024Mi
              cpu: 2500m
      restartPolicy: Never
