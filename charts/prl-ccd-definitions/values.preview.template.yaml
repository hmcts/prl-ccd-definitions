tags:
  ccd-pr: true

idam-pr:
  releaseNameOverride: ${SERVICE_NAME}-idam-pr
  enabled: true
  redirect_uris:
    XUI:
      - https://xui-${SERVICE_FQDN}/oauth2/callback
    CCD:
      - https://case-management-web-${SERVICE_FQDN}/oauth2redirect
    CCD Admin:
      - https://admin-web-${SERVICE_FQDN}/oauth2redirect

xui-webapp:
  enabled: true
  nodejs:
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-xui-webapp
    image: hmctspublic.azurecr.io/xui/webapp:latest
    ingressHost: xui-${SERVICE_FQDN}
    memoryRequests: 2Gi
    cpuRequests: 2000m
    memoryLimits: 4Gi
    cpuLimits: 4000m
    devmemoryRequests: 2Gi
    devcpuRequests: 2000m
    devmemoryLimits: 4Gi
    devcpuLimits: 4000m
    environment:
      NODE_TLS_REJECT_UNAUTHORIZED: 0
      HEALTH_CCD_COMPONENT_API: http://${SERVICE_NAME}-ccd-api-gw/health
      HEALTH_CCD_DATA_API: http://${SERVICE_NAME}-ccd-data-store-api/health
      HEALTH_TERMS_AND_CONDITIONS_API: https://xui-terms-and-conditions-${SERVICE_FQDN}
      SERVICES_CCD_COMPONENT_API: http://${SERVICE_NAME}-ccd-api-gw
      SERVICES_CCD_DATA_STORE_API: "https://ccd-data-store-api-prl-ccd-definitions-pr-${CHANGE_ID}.preview.platform.hmcts.net"
      SERVICES_CCD_CASE_ASSIGNMENT_API: http://${SERVICE_NAME}-aac-manage-case-assignment
      SERVICES_TERMS_AND_CONDITIONS: https://xui-terms-and-conditions-${SERVICE_FQDN}
      JURISDICTIONS: PRIVATELAW
      SERVICES_DOCUMENTS_API_V2: http://${SERVICE_NAME}-cdam
      FEATURE_JRD_E_LINKS_V2_ENABLED: true
      FEATURE_WORKALLOCATION_ENABLED: false
      FEATURE_UPDATED_TASK_PERMISSIONS_ENABLED: false
      WA_SUPPORTED_JURISDICTIONS: "IA,CIVIL"
      SERVICES_IDAM_API_URL: https://idam-api.aat.platform.hmcts.net
      SERVICES_IDAM_CLIENT_ID: xuiwebapp
      SERVICES_IDAM_LOGIN_URL: https://idam-web-public.aat.platform.hmcts.net
      SERVICES_IDAM_INDEX_URL: /
      SERVICES_IDAM_OAUTH_CALLBACK_URL: /oauth2/callback
      SERVICES_S2S: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal

ccd:
  ccd:
    definitionImporter:
      enabled: false
    managementWeb:
      enabled: true
    apiGatewayWeb:
      enabled: true
    s2s:
      enabled: false
    printService:
      enabled: false
    elastic:
      enabled: true
    ras:
      enabled: ${ENABLE_WA}

  ingressHost: ${SERVICE_FQDN}
  ingressIP: ${INGRESS_IP}
  consulIP: ${CONSUL_LB_IP}

  global:
    ccdApiGatewayIngress: http://${SERVICE_NAME}-ccd-api-gw
    idamApiUrl: https://idam-api.aat.platform.hmcts.net
    idamWebUrl: https://idam-web-public.aat.platform.hmcts.net
    dmStoreUrl: http://dm-store-aat.service.core-compute-aat.internal
    ccdAdminWebIngress: admin-web-${SERVICE_FQDN}
    ccdCaseManagementWebIngress: case-management-web-${SERVICE_FQDN}
    s2sUrl: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
    postgresHostname: "private-law-preview.postgres.database.azure.com"
    postgresSecret: postgres
    databaseNamePrefix: "pr-${CHANGE_ID}-"
    postgresUsername: hmcts

  ccd-user-profile-api:
    java:
      disableKeyVaults: true
      imagePullPolicy: Always
      environment:
        USER_PROFILE_S2S_AUTHORISED_SERVICES: ccd_admin,ccd_data,ccd_definition,prl_citizen_frontend
      secrets:
        USER_PROFILE_DB_PASSWORD:
          secretRef: postgres
          key: PASSWORD
          disabled: false
      ingressHost: ccd-user-profile-api-${SERVICE_FQDN}

  ccd-data-store-api:
    java:
      disableKeyVaults: true
      imagePullPolicy: Always
      environment:
        NODE_TLS_REJECT_UNAUTHORIZED: 0
        DATA_STORE_IDAM_KEY: ${DATA_STORE_S2S_KEY}
        IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET: ${IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET}
        IDAM_DATA_STORE_SYSTEM_USER_USERNAME: ${IDAM_DATA_STORE_SYSTEM_USER_USERNAME}
        IDAM_DATA_STORE_SYSTEM_USER_PASSWORD: ${IDAM_DATA_STORE_SYSTEM_USER_PASSWORD}
        IDAM_API_BASE_URL: https://idam-api.aat.platform.hmcts.net
        IDAM_OIDC_URL: https://idam-web-public.aat.platform.hmcts.net
        CASE_DOCUMENT_AM_URL: http://${SERVICE_NAME}-cdam
        ELASTIC_SEARCH_ENABLED: true
        ELASTIC_SEARCH_HOSTS: ${SERVICE_NAME}-es-master:9200
        CCD_S2S_AUTHORISED_SERVICES_CASE_USER_ROLES: aac_manage_case_assignment,prl_cos_api,prl_citizen_frontend
        ELASTIC_SEARCH_DATA_NODES_HOSTS:  http://${SERVICE_NAME}-es-master:9200
        DATA_STORE_DEFAULT_LOG_LEVEL: INFO
        DATA_STORE_S2S_AUTHORISED_SERVICES: ccd_data,ccd_gw,ccd_ps,probate_backend,divorce_ccd_submission,sscs,sscs_bulkscan,cmc,cmc_claim_store,cmc_claim_external_api,jui_webapp,pui_webapp,bulk_scan_orchestrator,fpl_case_service,iac,finrem_ccd_data_migrator,finrem_case_orchestration,employment_tribunals,ethos_repl_service,ccpay_bubble,ctsc_work_allocation,em_ccd_orchestrator,xui_webapp,bulk_scan_payment_processor,pcq_consolidation_service,em_npa_app,ecm_consumer,aac_manage_case_assignment,unspec_service,divorce_frontend,ccd_case_document_am_api,prl_cos_api,prl_citizen_frontend,wa_workflow_api,wa_task_configuration_api,wa_task_management_api,wa_task_monitor,wa_case_event_handler,am_role_assignment_service,ccd_gateway,em_ccd_orchestrator
        ROLE_ASSIGNMENT_URL: ${ROLE_ASSIGNMENT_URL}
      secrets:
        DATA_STORE_DB_PASSWORD:
          secretRef: postgres
          key: PASSWORD
          disabled: false
      ingressHost: ccd-data-store-api-${SERVICE_FQDN}

  ccd-definition-store-api:
    java:
      disableKeyVaults: true
      imagePullPolicy: Always
      devmemoryRequests: 1Gi
      devcpuRequests: 1000m
      devmemoryLimits: 2Gi
      devcpuLimits: 2000m
      environment:
        DEFINITION_STORE_IDAM_KEY: ${DEFINITION_STORE_S2S_KEY}
        DEFINITION_STORE_S2S_AUTHORISED_SERVICES: ccd_admin,ccd_data,ccd_gw,aac_manage_case_assignment,prl_citizen_frontend,xui_webapp
        IDAM_API_BASE_URL: https://idam-api.aat.platform.hmcts.net
        IDAM_OIDC_URL: https://idam-web-public.aat.platform.hmcts.net
        OIDC_ISSUER: https://forgerock-am.service.core-compute-idam-aat.internal:8443/openam/oauth2/hmcts
        ELASTIC_SEARCH_ENABLED: true
        ELASTIC_SEARCH_HOST: ${SERVICE_NAME}-es-master
        ELASTIC_SEARCH_CASE_INDEX_MAPPING_FIELDS_LIMIT: 50000
        DEFINITION_STORE_DEFAULT_LOG_LEVEL: DEBUG
        DEFINITION_STORE_TX_TIMEOUT_DEFAULT: 120
        DEFINITION_STORE_DB_USERNAME: hmcts
        LOG_LEVEL_ROOT: DEBUG
      secrets:
        DEFINITION_STORE_DB_PASSWORD:
          secretRef: postgres
          key: PASSWORD
          disabled: false
      ingressHost: ccd-definition-store-${SERVICE_FQDN}

  ccd-admin-web:
    nodejs:
      image: hmctspublic.azurecr.io/ccd/admin-web:latest
      ingressHost: admin-web-${SERVICE_FQDN}
      keyVaults: []
      environment:
        IDAM_ADMIN_WEB_SERVICE_KEY: ${ADMIN_S2S_KEY}
        IDAM_OAUTH2_AW_CLIENT_SECRET: ${ADMIN_WEB_IDAM_SECRET}
    idam-pr:
      enabled: true

  ccd-case-management-web:
    nodejs:
      environment:
        CCD_ACTIVITY_URL: null
        DM_URL: https://gateway-${SERVICE_FQDN}/documents
        DM_URL_REMOTE: https?://(gateway-${SERVICE_FQDN}:443|dm-store-aat.service.core-compute-aat.internal)/documents
        NODE_TLS_REJECT_UNAUTHORIZED: 0
        APPINSIGHTS_INSTRUMENTATIONKEY: ${APPINSIGHTS_INSTRUMENTATIONKEY}
        APPINSIGHTS_ENABLED: false
      ingressHost: case-management-web-${SERVICE_FQDN}
      ingressIP: ${INGRESS_IP}
    idam-pr:
      enabled: true

  ccd-api-gateway-web:
    nodejs:
      keyVaults: []
      environment:
        IDAM_SERVICE_KEY: ${API_GATEWAY_S2S_KEY}
        IDAM_OAUTH2_CLIENT_SECRET: ${API_GATEWAY_IDAM_SECRET}
        PROXY_DOCUMENT_MANAGEMENT: http://dm-store-aat.service.core-compute-aat.internal
        PROXY_PRINT_SERVICE: http://ccd-case-print-service-${SERVICE_FQDN}
        ADDRESS_LOOKUP_TOKEN: ${ADDRESS_LOOKUP_TOKEN}
      ingressHost: gateway-${SERVICE_FQDN}
      ingressIP: ${INGRESS_IP}

  ccd-case-print-service:
    nodejs:
      keyVaults: []
      environment:
        IDAM_PRINT_SERVICE_KEY: ${PRINT_S2S_KEY}
      ingressHost: ccd-case-print-service-${SERVICE_FQDN}

  importer:
    userprofile:
      enabled: true
      jurisdictions:
        - PRIVATELAW
      users:
        - fprl_caseworker_solicitor@mailinator.com|PRIVATELAW|PRLAPPS|Created
      userProfileDatabaseHost: ${SERVICE_NAME}-ccd-postgres
      userProfileDatabasePort: 5432
      userProfileDatabaseUser: hmcts
      userProfileDatabasePassword: hmcts
      userProfileDatabaseName: user-profile

  elasticsearch:
    nameOverride: ${SERVICE_NAME}-es
    clusterName: "es"
    replicas: 1

  logstash:
    image: hmctspublic.azurecr.io/imported/logstash/logstash
    imageTag: "7.16.1"
    imagePullPolicy: "IfNotPresent"
    logstashJavaOpts: -Xmx1g -Xms512M
    persistence:
      enabled: false
    extraEnvs:
      - name: ES_HOSTS
        value: "${SERVICE_NAME}-es-master"
    extraInitContainers: |
      - name: download-postgres-jdbc
        image: hmctspublic.azurecr.io/curl:7.70.0
        command: ['curl', '-L', 'https://jdbc.postgresql.org/download/postgresql-42.3.3.jar', '-o', '/logstash-lib/postgresql.jar']
        volumeMounts:
        - name: logstash-lib
          mountPath: /logstash-lib
    extraVolumes: |
      - name: logstash-lib
        emptyDir: {}
      - name: database-secret-volume
        secret:
          secretName: postgres
    extraVolumeMounts: |
      - name: logstash-lib
        mountPath: /usr/share/logstash/ccd
      - name: database-secret-volume
        mountPath: /etc/logstash/secrets
        readOnly: true
    logstashConfig:
      logstash.yml: |
        http.host: 0.0.0.0
        xpack.monitoring.enabled: false
        queue.type: persisted
        dead_letter_queue.enable: true
      pipelines.yml: |
        - pipeline.id: main
          path.config: "/usr/share/logstash/pipeline/{01_input,02_filter,03_output}.conf"
          pipeline.workers: 4
          pipeline.batch.size: 500
          queue.type: persisted
    logstashPipeline:
      01_input.conf: |
        input  {
          jdbc {
            jdbc_connection_string => "jdbc:postgresql://private-law-preview.postgres.database.azure.com:5432/pr-${CHANGE_ID}-data-store?stringtype=unspecified&sslmode=require"
            jdbc_user => "hmcts"
            jdbc_password_filepath => "/etc/logstash/secrets/PASSWORD"
            jdbc_validate_connection => true
            jdbc_validation_timeout => "1"
            jdbc_driver_library => "/usr/share/logstash/ccd/postgresql.jar"
            jdbc_driver_class => "org.postgresql.Driver"
            jdbc_default_timezone => "UTC"
            statement => "UPDATE case_data SET marked_by_logstash = true WHERE marked_by_logstash = false RETURNING id, created_date, last_modified, jurisdiction, case_type_id, state, last_state_modified_date, data::TEXT as json_data, data_classification::TEXT as json_data_classification, reference, security_classification, supplementary_data::TEXT as json_supplementary_data"
            clean_run => false
            schedule => "* * * * * *"
          }
        }
      02_filter.conf: |
        filter{
          json{
              source => "json_data"
              target => "data"
              remove_field => ["json_data"]
              }

              json{
                  source => "json_supplementary_data"
                  target => "supplementary_data"
                  remove_field => ["json_supplementary_data"]
              }

              json{
                  source => "json_data_classification"
                  target => "data_classification"
                  remove_field => ["json_data_classification"]
              }

              if [data][SearchCriteria] {
                  clone {
                      clones => ["SearchCriteria"]
                  }
              }

              if [type] == "SearchCriteria" {
                  if [data][SearchCriteria] {
                      mutate {
                        rename => {"[data][SearchCriteria]" => "[data_new][SearchCriteria]" }
                      }
                  }
                  if [data][caseManagementLocation] {
                      mutate {
                        rename => {"[data][caseManagementLocation]" => "[data_new][caseManagementLocation]" }
                      }
                  }
                  if [data][CaseAccessCategory] {
                    mutate {
                        rename => {"[data][CaseAccessCategory]" => "[data_new][CaseAccessCategory]" }
                    }
                  }
                  if [data][caseNameHmctsInternal] {
                      mutate {
                        rename => {"[data][caseNameHmctsInternal]" => "[data_new][caseNameHmctsInternal]" }
                      }
                  }
                  if [data][caseManagementCategory] {
                      mutate {
                        rename => {"[data][caseManagementCategory]" => "[data_new][caseManagementCategory]" }
                      }
                  }
                  if [supplementary_data][HMCTSServiceId] {
                      mutate {
                        rename => {"[supplementary_data][HMCTSServiceId]" => "[supplementary_data_new][HMCTSServiceId]" }
                      }
                  }
                  if [data_classification][SearchCriteria] {
                      mutate {
                        rename => {"[data_classification][SearchCriteria]" => "[data_classification_new][SearchCriteria]" }
                      }
                  }
                  if [data_classification][CaseAccessCategory] {
                    mutate {
                          rename => {"[data_classification][CaseAccessCategory]" => "[data_classification_new][CaseAccessCategory]" }
                    }
                  }
                  if [data_classification][caseManagementLocation] {
                    mutate {
                        rename => {"[data_classification][caseManagementLocation]" => "[data_classification_new][caseManagementLocation]" }
                    }
                  }
                  if [data_classification][caseNameHmctsInternal] {
                      mutate {
                        rename => {"[data_classification][caseNameHmctsInternal]" => "[data_classification_new][caseNameHmctsInternal]" }
                      }
                  }

                  if [data_classification][caseManagementCategory] {
                      mutate {
                        rename => {"[data_classification][caseManagementCategory]" => "[data_classification_new][caseManagementCategory]" }
                      }
                  }
                  mutate { remove_field =>[ "data" ,"supplementary_data", "data_classification", "last_state_modified_date", "type","last_modified", "created_date" ] }

                  mutate {
                          rename => { "[data_new]" => "data" }
                          rename => { "[supplementary_data_new]"  => "supplementary_data" }
                          rename => { "[data_classification_new]"  => "data_classification" }
                  }

                  mutate {
                    add_field => { "index_id" => "global_search" }
                  }
                  mutate {
                    lowercase => [ "index_id" ]
                  }
              } else {
                  mutate {
                      add_field => { "index_id" => "%{case_type_id}_cases" }
                }
              mutate {
                lowercase => [ "index_id" ]
              }
              }
        }
      03_output.conf: |
        output {
            elasticsearch {
                hosts => ["${SERVICE_NAME}-es-master"]
                sniffing => false
                index => "%{[index_id]}"
                document_type => "_doc"
                document_id => "%{id}"
                timeout => 60
            }
        }

  am-role-assignment-service:
    java:
      ingressHost: am-role-assignment-service-${SERVICE_FQDN}
      autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 1
      environment:
        APPLICATION_LOGGING_LEVEL: TRACE
        CCD_DATA_STORE_URL: http://${SERVICE_NAME}-ccd-data-store-api
        RUN_LD_ON_STARTUP: false
      keyVaults:
        am:
          secrets:
            - name: am-role-assignment-service-s2s-secret
              alias: AM_ROLE_ASSIGNMENT_SERVICE_SECRET
            - name: app-insights-connection-string
              alias: app-insights-connection-string
            - name: role-assignment-service-IDAM-CLIENT-SECRET
              alias: ROLE_ASSIGNMENT_IDAM_CLIENT_SECRET
            - name: role-assignment-service-IDAM-ADMIN-SECRET
              alias: ROLE_ASSIGNMENT_IDAM_ADMIN_PASSWORD
            - name: role-assignment-service-LD-SDK-KEY
              alias: LD_SDK_KEY
      secrets:
        ROLE_ASSIGNMENT_DB_PASSWORD:
          secretRef: postgres
          key: PASSWORD
          disabled: false

ccd-case-document-am-api:
  enabled: true
  java:
    disableKeyVaults: true
    releaseNameOverride: ${SERVICE_NAME}-cdam
    imagePullPolicy: Always
    image: hmctspublic.azurecr.io/ccd/case-document-am-api:latest
    ingressHost: ccd-case-document-am-api-${SERVICE_FQDN}
    environment:
      IDAM_API_URL: https://idam-api.aat.platform.hmcts.net
      IDAM_OIDC_URL: https://idam-web-public.aat.platform.hmcts.net
      OIDC_ISSUER: https://forgerock-am.service.core-compute-idam-aat.internal:8443/openam/oauth2/hmcts
      S2S_URL: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
      DM_STORE_BASE_URL: http://dm-store-aat.service.core-compute-aat.internal
      CCD_DATA_STORE_API_BASE_URL: http://${SERVICE_NAME}-ccd-data-store-api
      CASE_DOCUMENT_AM_API_S2S_SECRET: ${CCD_CASE_DOCUMENT_AM_API_SECRET}
      CASE_DOCUMENT_S2S_AUTHORISED_SERVICES: ccd_case_document_am_api,ccd_gw,xui_webapp,ccd_data,bulk_scan_processor,sscs,probate_backend,iac,em_npa_app,fprl_dgs_api,dg_docassembly_api,em_stitching_api,em_ccd_orchestrator,cmc_claim_store,civil_service,bulk_scan_orchestrator,ethos_repl_service,divorce_document_generator,finrem_document_generator,finrem_case_orchestration,fpl_case_service,et_cos,prl_cos_api,prl_dgs_api,et_sya_api,adoption_cos_api,adoption_web,nfdiv_case_api,divorce_frontend,sptribs_case_api,sptribs_dss_backend,civil_general_applications,prl_citizen_frontend

aac-manage-case-assignment:
  enabled: true
  java:
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-aac-manage-case-assignment
    image: hmctspublic.azurecr.io/aac/manage-case-assignment:latest
    #ingressHost: aac-${SERVICE_FQDN}
    keyVaults: []
    ports:
      - 5005:5005
    environment:
      ROLE_ASSIGNMENT_URL: ${ROLE_ASSIGNMENT_URL}
      JAVA_TOOL_OPTIONS: -Xms128m -Xmx600m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      IDAM_API_URL: https://idam-api.aat.platform.hmcts.net
      IDAM_OIDC_URL: https://idam-web-public.aat.platform.hmcts.net
      OIDC_ISSUER: https://forgerock-am.service.core-compute-idam-aat.internal:8443/openam/oauth2/hmcts
      S2S_URL: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
      MCA_DS_PROXY_URLS_ALLOWED_LIST: /searchCases.*,/internal/searchCases.*,/internal/cases.*
      MCA_DEF_STORE_PROXY_URLS_ALLOWED_LIST: /api/display/challenge-questions.*
      MANAGE_CASE_S2S_AUTHORISED_SERVICES: xui_webapp,ccd_data,prl_cos_api,prl_citizen_frontend
      CCD_DATA_STORE_API_BASE_URL: http://${SERVICE_NAME}-ccd-data-store-api
      CCD_DEFINITION_STORE_API_BASE_URL: http://${SERVICE_NAME}-ccd-definition-store
      PRD_HOST: http://rd-professional-api-aat.service.core-compute-aat.internal
      IDAM_CAA_USERNAME: ${IDAM_CAA_USERNAME}
      IDAM_CAA_PASSWORD: ${IDAM_CAA_PASSWORD}
      IDAM_CLIENT_SECRET: ${IDAM_MCA_CLIENT_SECRET}
      MANAGE_CASE_S2S_KEY: ${MANAGE_CASE_S2S_KEY}
      IDAM_NOC_APPROVER_USERNAME: ${IDAM_NOC_APPROVER_USERNAME}
      IDAM_NOC_APPROVER_PASSWORD: ${IDAM_NOC_APPROVER_PASSWORD}
      NOTIFY_MCA_API_KEY: ${NOTIFY_MCA_API_KEY}
      MANAGE_CASE_DEFAULT_LOG_LEVEL: INFO
      autoscaling:
        enabled: false

prl-cos:
  java:
    image: hmctspublic.azurecr.io/prl/cos:pr-3292
    ingressHost: ${SERVICE_FQDN}
    imagePullPolicy: Always fr
    #Below settings are copied from prl-cos preview values, needs review.
    devmemoryRequests: 1Gi
    devcpuRequests: 1000m
    devmemoryLimits: 4Gi
    devcpuLimits: 2000m
    environment:
      PAY_CALLBACK_URL: https://${SERVICE_FQDN}/service-request-update
      IDAM_CLIENT_REDIRECT_URI: https://${SERVICE_FQDN}/oauth2/callback
      CORE_CASE_DATA_API_URL: http://${SERVICE_NAME}-ccd-data-store-api
      CCD_CASE_DOCS_AM_API: http://${SERVICE_NAME}-cdam
      ACA_SERVICE_API_BASEURL: http://${SERVICE_NAME}-aac-manage-case-assignment
      AM_ROLE_ASSIGNMENT_API_URL: ${ROLE_ASSIGNMENT_URL}
      BUNDLE_URL: http://${SERVICE_NAME}-em-ccdorc
      PRL_S2S_AUTHORISED_SERVICES: api_gw,prl_citizen_frontend,fis_hmc_api,ccd_data,prl_cos_api,payment_app
      APP_ENV: "preview"
      HEARING_PREVIEW_BYPASS_ENABLED: "true"
      BARRISTER_FEATURE_ENABLED: "true"

postgresql:
  enabled: true
  flexibleserver: private-law-preview
  setup:
    databases:
      - name: "pr-${CHANGE_ID}-data-store"
      - name: "pr-${CHANGE_ID}-definition-store"
      - name: "pr-${CHANGE_ID}-user-profile"
      - name: "pr-${CHANGE_ID}-role-assignment"
      - name: "pr-${CHANGE_ID}-wa-case-event-handler"
      - name: "pr-${CHANGE_ID}-wa_workflow_api"
      - name: "pr-${CHANGE_ID}-camunda"
      - name: "pr-${CHANGE_ID}-cft_task_db"
      - name: "pr-${CHANGE_ID}-cft_task_db_replica"
