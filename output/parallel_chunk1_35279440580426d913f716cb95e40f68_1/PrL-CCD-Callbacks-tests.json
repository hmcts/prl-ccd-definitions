{
  "stats": {
    "suites": 3,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2023-10-12T10:56:03.468Z",
    "end": "2023-10-12T11:09:59.430Z",
    "duration": 835962,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8634cc3a-f4cf-4095-a7bc-8073ccd660ce",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0f9eaf53-e285-4112-b28d-70ae74fbd0ba",
          "title": "CA Manage Order Upload Order - TS Court Admin",
          "fullFile": "/Users/rentaluser/Desktop/prl-project/prl-ccd-definitions/test/end-to-end/tests/CAManageOrderUploadOrder_test.js",
          "file": "/test/end-to-end/tests/CAManageOrderUploadOrder_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite in \"CA Manage Order Upload Order - TS Court Admin\"",
              "fullTitle": "CA Manage Order Upload Order - TS Court Admin \"before all\" hook: codeceptjs.beforeSuite in \"CA Manage Order Upload Order - TS Court Admin\"",
              "timedOut": false,
              "duration": 628,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "9f771b8e-c260-4b66-8692-8b192ae535dd",
              "parentUUID": "0f9eaf53-e285-4112-b28d-70ae74fbd0ba",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before in \"CA Manage Order Upload Order - TS Court Admin\"",
              "fullTitle": "CA Manage Order Upload Order - TS Court Admin \"before each\" hook: codeceptjs.before in \"CA Manage Order Upload Order - TS Court Admin\"",
              "timedOut": false,
              "duration": 184,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "b0110459-df81-4dd7-930a-8cf5718b1a81",
              "parentUUID": "0f9eaf53-e285-4112-b28d-70ae74fbd0ba",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite in \"CA Manage Order Upload Order - TS Court Admin\"",
              "fullTitle": "CA Manage Order Upload Order - TS Court Admin \"after all\" hook: codeceptjs.afterSuite in \"CA Manage Order Upload Order - TS Court Admin\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "c1331c62-8f58-4627-9827-4bfc5f5bbff9",
              "parentUUID": "0f9eaf53-e285-4112-b28d-70ae74fbd0ba",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs in \"CA Manage Order Upload Order - TS Court Admin\"",
              "fullTitle": "CA Manage Order Upload Order - TS Court Admin \"after each\" hook: finalize codeceptjs in \"CA Manage Order Upload Order - TS Court Admin\"",
              "timedOut": false,
              "duration": 6,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "30349909-d4a5-4fc5-ad78-98b2e7b11171",
              "parentUUID": "0f9eaf53-e285-4112-b28d-70ae74fbd0ba",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "CA Manage Order Upload Order Serve order Personally @nightly",
              "fullTitle": "CA Manage Order Upload Order - TS Court Admin CA Manage Order Upload Order Serve order Personally @nightly",
              "timedOut": false,
              "duration": 115258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "recorder.errHandler((err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  if (test.throws) { // check that test should actually fail\n    try {\n      assertThrown(err, test.throws);\n      event.emit(event.test.passed, test);\n      event.emit(event.test.finished, test);\n      recorder.add(() => done());\n      return;\n    } catch (newErr) {\n      err = newErr;\n    }\n  }\n  event.emit(event.test.failed, test, err);\n  event.emit(event.test.finished, test);\n  recorder.add(() => done(err));\n});\nif (isAsyncFunction(testFn)) {\n  event.emit(event.test.started, test);\n  const catchError = e => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      recorder.session.start('teardown');\n      recorder.cleanAsyncErr();\n      event.emit(event.test.failed, test, err);\n      event.emit(event.test.finished, test);\n      recorder.add(() => done(err));\n    });\n  };\n  let injectedArguments;\n  try {\n    injectedArguments = getInjectedArguments(testFn, test);\n  } catch (e) {\n    catchError(e);\n    return;\n  }\n  testFn.call(test, injectedArguments).then(() => {\n    recorder.add('fire test.passed', () => {\n      event.emit(event.test.passed, test);\n      event.emit(event.test.finished, test);\n    });\n    recorder.add('finish test', () => done());\n    recorder.catch();\n  }).catch(catchError);\n  return;\n}\ntry {\n  event.emit(event.test.started, test);\n  testFn.call(test, getInjectedArguments(testFn, test));\n} catch (err) {\n  recorder.throw(err);\n} finally {\n  recorder.add('fire test.passed', () => {\n    event.emit(event.test.passed, test);\n    event.emit(event.test.finished, test);\n  });\n  recorder.add('finish test', () => done());\n  recorder.catch();\n}",
              "err": {},
              "uuid": "8f013c73-bdea-4257-a01e-67c363b248da",
              "parentUUID": "0f9eaf53-e285-4112-b28d-70ae74fbd0ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "CA Manage Order Upload Order - For Judge review - @nightly",
              "fullTitle": "CA Manage Order Upload Order - TS Court Admin: CA Manage Order Upload Order - For Judge review - @nightly",
              "timedOut": false,
              "duration": 109045,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I }) => {\n    await I.loginAsCourtAdmin();\n    await I.createC100CaseByCourtAdmin();\n    await I.manageOrderUploadOrderForJudgeReview();",
              "err": {},
              "uuid": "c385f3ec-53aa-4852-b7cf-01de395d5dfb",
              "parentUUID": "0f9eaf53-e285-4112-b28d-70ae74fbd0ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8f013c73-bdea-4257-a01e-67c363b248da",
            "c385f3ec-53aa-4852-b7cf-01de395d5dfb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 224303,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "4d309534-dbe2-41e6-9b4c-eb9eee42b732",
          "title": "Case Name Change",
          "fullFile": "/Users/rentaluser/Desktop/prl-project/prl-ccd-definitions/test/end-to-end/tests/CaseNameChange_test.js",
          "file": "/test/end-to-end/tests/CaseNameChange_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite in \"Case Name Change\"",
              "fullTitle": "Case Name Change \"before all\" hook: codeceptjs.beforeSuite in \"Case Name Change\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "e73b57b8-8c08-4912-b2d2-9b31d5b0dc5d",
              "parentUUID": "4d309534-dbe2-41e6-9b4c-eb9eee42b732",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before in \"Case Name Change\"",
              "fullTitle": "Case Name Change \"before each\" hook: codeceptjs.before in \"Case Name Change\"",
              "timedOut": false,
              "duration": 182,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "29e1b73a-79df-4cb5-b6a0-9f0c97549c10",
              "parentUUID": "4d309534-dbe2-41e6-9b4c-eb9eee42b732",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite in \"Case Name Change\"",
              "fullTitle": "Case Name Change \"after all\" hook: codeceptjs.afterSuite in \"Case Name Change\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "eb39a3ab-c3b3-489e-bee9-7aa03588ecc5",
              "parentUUID": "4d309534-dbe2-41e6-9b4c-eb9eee42b732",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs in \"Case Name Change\"",
              "fullTitle": "Case Name Change \"after each\" hook: finalize codeceptjs in \"Case Name Change\"",
              "timedOut": false,
              "duration": 8,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "1ec628bc-bdd1-434f-b3c5-cdfe1468c72e",
              "parentUUID": "4d309534-dbe2-41e6-9b4c-eb9eee42b732",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Case Name - basic journey @nightly @cross-browser",
              "fullTitle": "Case Name Change: Case Name - basic journey @nightly @cross-browser",
              "timedOut": false,
              "duration": 62174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I }) => {\n  await I.loginAsSolicitor();\n  await I.createCase();\n  await I.caseNameChange();",
              "err": {},
              "uuid": "6122c355-b7d6-4804-9ed3-b80f8454fe4a",
              "parentUUID": "4d309534-dbe2-41e6-9b4c-eb9eee42b732",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6122c355-b7d6-4804-9ed3-b80f8454fe4a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 62174,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "182a8215-8af8-45f1-ba8e-d393f28f3539",
          "title": "Move case to Gatekeeping State",
          "fullFile": "/Users/rentaluser/Desktop/prl-project/prl-ccd-definitions/test/end-to-end/tests/GateKeepingState_test.js",
          "file": "/test/end-to-end/tests/GateKeepingState_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite in \"Move case to Gatekeeping State\"",
              "fullTitle": "Move case to Gatekeeping State \"before all\" hook: codeceptjs.beforeSuite in \"Move case to Gatekeeping State\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "8101c6ec-9e8f-499b-9561-411bea7f7966",
              "parentUUID": "182a8215-8af8-45f1-ba8e-d393f28f3539",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before in \"Move case to Gatekeeping State\"",
              "fullTitle": "Move case to Gatekeeping State \"before each\" hook: codeceptjs.before in \"Move case to Gatekeeping State\"",
              "timedOut": false,
              "duration": 166,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "69e56c37-6daa-4e83-9cad-6d235ffc3489",
              "parentUUID": "182a8215-8af8-45f1-ba8e-d393f28f3539",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite in \"Move case to Gatekeeping State\"",
              "fullTitle": "Move case to Gatekeeping State \"after all\" hook: codeceptjs.afterSuite in \"Move case to Gatekeeping State\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "7c7cc1c8-f913-4781-8c82-71a0d189397c",
              "parentUUID": "182a8215-8af8-45f1-ba8e-d393f28f3539",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs in \"Move case to Gatekeeping State\"",
              "fullTitle": "Move case to Gatekeeping State \"after each\" hook: finalize codeceptjs in \"Move case to Gatekeeping State\"",
              "timedOut": false,
              "duration": 8,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "103f901a-aada-4644-930e-b0e5e7015616",
              "parentUUID": "182a8215-8af8-45f1-ba8e-d393f28f3539",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Move case to Gatekeeping State @nightly",
              "fullTitle": "Move case to Gatekeeping State Move case to Gatekeeping State @nightly",
              "timedOut": false,
              "duration": 291501,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "recorder.errHandler((err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  if (test.throws) { // check that test should actually fail\n    try {\n      assertThrown(err, test.throws);\n      event.emit(event.test.passed, test);\n      event.emit(event.test.finished, test);\n      recorder.add(() => done());\n      return;\n    } catch (newErr) {\n      err = newErr;\n    }\n  }\n  event.emit(event.test.failed, test, err);\n  event.emit(event.test.finished, test);\n  recorder.add(() => done(err));\n});\nif (isAsyncFunction(testFn)) {\n  event.emit(event.test.started, test);\n  const catchError = e => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      recorder.session.start('teardown');\n      recorder.cleanAsyncErr();\n      event.emit(event.test.failed, test, err);\n      event.emit(event.test.finished, test);\n      recorder.add(() => done(err));\n    });\n  };\n  let injectedArguments;\n  try {\n    injectedArguments = getInjectedArguments(testFn, test);\n  } catch (e) {\n    catchError(e);\n    return;\n  }\n  testFn.call(test, injectedArguments).then(() => {\n    recorder.add('fire test.passed', () => {\n      event.emit(event.test.passed, test);\n      event.emit(event.test.finished, test);\n    });\n    recorder.add('finish test', () => done());\n    recorder.catch();\n  }).catch(catchError);\n  return;\n}\ntry {\n  event.emit(event.test.started, test);\n  testFn.call(test, getInjectedArguments(testFn, test));\n} catch (err) {\n  recorder.throw(err);\n} finally {\n  recorder.add('fire test.passed', () => {\n    event.emit(event.test.passed, test);\n    event.emit(event.test.finished, test);\n  });\n  recorder.add('finish test', () => done());\n  recorder.catch();\n}",
              "err": {},
              "uuid": "9f126f5e-9989-4650-a6b9-ea2cd9d79d2f",
              "parentUUID": "182a8215-8af8-45f1-ba8e-d393f28f3539",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9f126f5e-9989-4650-a6b9-ea2cd9d79d2f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 291501,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "PrL-CCD-Callbacks-tests",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "includeScreenshots": true,
        "reportDir": "output/parallel_chunk1_35279440580426d913f716cb95e40f68_1",
        "reportFilename": "PrL-CCD-Callbacks-tests",
        "reportTitle": "PrL CCD Callbacks Tests",
        "inline": true,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}