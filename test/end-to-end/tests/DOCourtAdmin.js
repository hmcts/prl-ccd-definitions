Feature('FL401 DO Court Admin Journey');

Scenario('Create a Case as a Solicitor, and continue with FL401 Case Events as Court Admin User', async I => {
  await I.loginAsSolicitor();
  await I.createCaseFL401();
  let createdCaseUrl = await I.getCurrentPageUrl();
  await I.typeOfApplicationEventFL401();
  await I.runWithoutNoticeOrderHappyPath();
  await I.applicantDetailsFL401();
  await I.respondentDetailsFL401();
  await I.runApplicantsFamilyEvent();
  await I.runRelationshipToRespondent();
  await I.runRespondentBehaviour();
  await I.runTheHomeHappyPath();
  await I.submitStatementOfTruth();
  I.wait('2');
  await I.logOut();
  I.wait('5');
  await I.loginAsCourtAdminUserOne();
  I.wait('5');
  await I.amOnPage(createdCaseUrl);
  I.wait('5');
  await I.addCaseNumber();
  I.wait('5');
  await I.addNewGateKeeper();
  I.wait('5');
  await I.runEventHappyPath();
  I.wait('5');
  await I.runManageDocuments();
  I.wait('5');
  await I.runServiceApplication();
  I.wait('5');
}).retry({ retries: 3, minTimeout: 30000 });
